{"ast":null,"code":"var _jsxFileName = \"/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/src/components/Tags/Tags.js\";\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport \"./Tags.css\";\n\nclass ControlledCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check1: false,\n      check2: false,\n      check3: false,\n      check4: false\n    };\n\n    this.handleChange = (checked, event) => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.check1 !== this.state.check1 && this.state.check1 !== null) {\n      this.setState({\n        check2: this.state.check1,\n        check3: this.state.check1\n      });\n    }\n\n    if (prevState.check2 !== this.state.check2 || prevState.check3 !== this.state.check3) {\n      this.setState({\n        check1: this.state.check2 && this.state.check3 || (this.state.check2 || this.state.check3 ? null : false)\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: \"Main Category 1\",\n      isChecked: this.state.check1,\n      onChange: this.handleChange,\n      \"aria-label\": \"controlled checkbox example\",\n      id: \"check-1\",\n      name: \"check1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      className: \"nested\",\n      label: \"Sub Tag 1\",\n      isChecked: this.state.check2,\n      onChange: this.handleChange,\n      \"aria-label\": \"controlled checkbox example\",\n      id: \"check-2\",\n      name: \"check2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      className: \"nested\",\n      label: \"Sub Tag 2\",\n      isChecked: this.state.check3,\n      onChange: this.handleChange,\n      \"aria-label\": \"controlled checkbox example\",\n      id: \"check-3\",\n      name: \"check3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      label: \"Main Category 2\",\n      isChecked: this.state.check4,\n      onChange: this.handleChange,\n      \"aria-label\": \"controlled checkbox example\",\n      id: \"check-4\",\n      name: \"check4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ControlledCheckbox;","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/src/components/Tags/Tags.js"],"names":["React","Checkbox","ControlledCheckbox","Component","constructor","props","state","check1","check2","check3","check4","handleChange","checked","event","target","value","type","name","setState","componentDidUpdate","_prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport \"./Tags.css\"\n\nclass ControlledCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check1: false,\n      check2: false,\n      check3: false,\n      check4: false\n    };\n    this.handleChange = (checked, event) => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({ [name]: value });\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.check1 !== this.state.check1 && this.state.check1 !== null) {\n      this.setState({\n        check2: this.state.check1,\n        check3: this.state.check1,\n      })\n    }\n\n    if (prevState.check2 !== this.state.check2 || prevState.check3 !== this.state.check3) {\n      this.setState({\n        check1: (this.state.check2 && this.state.check3) || (this.state.check2 || this.state.check3 ? null : false)\n      })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Checkbox\n          label=\"Main Category 1\"\n          isChecked={this.state.check1}\n          onChange={this.handleChange}\n          aria-label=\"controlled checkbox example\"\n          id=\"check-1\"\n          name=\"check1\"\n        />\n        <Checkbox\n          className=\"nested\"\n          label=\"Sub Tag 1\"\n          isChecked={this.state.check2}\n          onChange={this.handleChange}\n          aria-label=\"controlled checkbox example\"\n          id=\"check-2\"\n          name=\"check2\"\n        />\n        <Checkbox\n          className=\"nested\"\n          label=\"Sub Tag 2\"\n          isChecked={this.state.check3}\n          onChange={this.handleChange}\n          aria-label=\"controlled checkbox example\"\n          id=\"check-3\"\n          name=\"check3\"\n        />\n        <Checkbox\n          label=\"Main Category 2\"\n          isChecked={this.state.check4}\n          onChange={this.handleChange}\n          aria-label=\"controlled checkbox example\"\n          id=\"check-4\"\n          name=\"check4\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ControlledCheckbox"]},"metadata":{},"sourceType":"module"}