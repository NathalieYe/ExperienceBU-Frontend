{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nimport { TextInput } from '../TextInput';\nimport { TooltipPosition } from '../Tooltip';\nimport GenerateId from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nexport const clipboardCopyFunc = (event, text) => {\n  const clipboard = event.currentTarget.parentElement;\n  const el = document.createElement('input');\n  el.value = text.toString();\n  clipboard.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  clipboard.removeChild(el);\n};\nexport let ClipboardCopyVariant;\n\n(function (ClipboardCopyVariant) {\n  ClipboardCopyVariant[\"inline\"] = \"inline\";\n  ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\n\nexport class ClipboardCopy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"timer\", null);\n\n    _defineProperty(this, \"componentDidUpdate\", (prevProps, prevState) => {\n      if (prevProps.children !== this.props.children) {\n        this.updateText(this.props.children);\n      }\n    });\n\n    _defineProperty(this, \"expandContent\", _event => {\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    });\n\n    _defineProperty(this, \"updateText\", text => {\n      this.setState({\n        text\n      });\n      this.props.onChange(text);\n    });\n\n    _defineProperty(this, \"render\", () => {\n      const _this$props = this.props,\n            {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        isExpanded,\n        onChange,\n        // Don't pass to <div>\n\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        isReadOnly,\n        isCode,\n        exitDelay,\n        maxWidth,\n        entryDelay,\n        switchDelay,\n        onCopy,\n        hoverTip,\n        clickTip,\n        textAriaLabel,\n        toggleAriaLabel,\n        variant,\n        position,\n        className\n      } = _this$props,\n            divProps = _objectWithoutProperties(_this$props, [\"isExpanded\", \"onChange\", \"isReadOnly\", \"isCode\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"switchDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\"]);\n\n      const textIdPrefix = 'text-input-';\n      const toggleIdPrefix = 'toggle-';\n      const contentIdPrefix = 'content-';\n      return React.createElement(\"div\", _extends({\n        className: css(styles.clipboardCopy, this.state.expanded && styles.modifiers.expanded, className)\n      }, divProps), React.createElement(GenerateId, {\n        prefix: \"\"\n      }, id => React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.clipboardCopyGroup)\n      }, variant === 'expansion' && React.createElement(ClipboardCopyToggle, {\n        isExpanded: this.state.expanded,\n        onClick: this.expandContent,\n        id: `${toggleIdPrefix}-${id}`,\n        textId: `${textIdPrefix}-${id}`,\n        contentId: `${contentIdPrefix}-${id}`,\n        \"aria-label\": toggleAriaLabel\n      }), React.createElement(TextInput, {\n        isReadOnly: isReadOnly || this.state.expanded,\n        onChange: this.updateText,\n        value: this.state.text,\n        id: `text-input-${id}`,\n        \"aria-label\": textAriaLabel\n      }), React.createElement(ClipboardCopyButton, {\n        exitDelay: exitDelay,\n        entryDelay: entryDelay,\n        maxWidth: maxWidth,\n        position: position,\n        id: `copy-button-${id}`,\n        textId: `text-input-${id}`,\n        \"aria-label\": hoverTip,\n        onClick: event => {\n          if (this.timer) {\n            window.clearTimeout(this.timer);\n            this.setState({\n              copied: false\n            });\n          }\n\n          onCopy(event, this.state.text);\n          this.setState({\n            copied: true\n          }, () => {\n            this.timer = window.setTimeout(() => {\n              this.setState({\n                copied: false\n              });\n              this.timer = null;\n            }, switchDelay);\n          });\n        }\n      }, this.state.copied ? clickTip : hoverTip)), this.state.expanded && React.createElement(ClipboardCopyExpanded, {\n        isReadOnly: isReadOnly,\n        isCode: isCode,\n        id: `content-${id}`,\n        onChange: this.updateText\n      }, this.state.text))));\n    });\n\n    this.state = {\n      text: this.props.children,\n      expanded: this.props.isExpanded,\n      copied: false\n    };\n  }\n\n}\n\n_defineProperty(ClipboardCopy, \"propTypes\", {\n  className: _pt.string,\n  hoverTip: _pt.string,\n  clickTip: _pt.string,\n  textAriaLabel: _pt.string,\n  toggleAriaLabel: _pt.string,\n  isReadOnly: _pt.bool,\n  isExpanded: _pt.bool,\n  isCode: _pt.bool,\n  variant: _pt.oneOfType([_pt.any, _pt.oneOf(['inline']), _pt.oneOf(['expansion'])]),\n  position: _pt.oneOfType([_pt.any, _pt.oneOf(['auto']), _pt.oneOf(['top']), _pt.oneOf(['bottom']), _pt.oneOf(['left']), _pt.oneOf(['right'])]),\n  maxWidth: _pt.string,\n  exitDelay: _pt.number,\n  entryDelay: _pt.number,\n  switchDelay: _pt.number,\n  onCopy: _pt.func,\n  onChange: _pt.func,\n  children: _pt.node.isRequired\n});\n\n_defineProperty(ClipboardCopy, \"defaultProps\", {\n  hoverTip: 'Copy to clipboard',\n  clickTip: 'Successfully copied to clipboard!',\n  isReadOnly: false,\n  isExpanded: false,\n  isCode: false,\n  variant: 'inline',\n  position: TooltipPosition.top,\n  maxWidth: '150px',\n  exitDelay: 1600,\n  entryDelay: 100,\n  switchDelay: 2000,\n  onCopy: clipboardCopyFunc,\n  onChange: () => undefined,\n  textAriaLabel: 'Copyable input',\n  toggleAriaLabel: 'Show content'\n});","map":{"version":3,"sources":["C:/Users/tungb/Desktop/ExperienceBU/experiencebu/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","styles","css","TextInput","TooltipPosition","GenerateId","ClipboardCopyButton","ClipboardCopyToggle","ClipboardCopyExpanded","clipboardCopyFunc","event","text","clipboard","currentTarget","parentElement","el","document","createElement","toString","appendChild","select","execCommand","removeChild","ClipboardCopyVariant","ClipboardCopy","Component","constructor","props","prevProps","prevState","children","updateText","_event","setState","expanded","onChange","_this$props","isExpanded","isReadOnly","isCode","exitDelay","maxWidth","entryDelay","switchDelay","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","variant","position","className","divProps","textIdPrefix","toggleIdPrefix","contentIdPrefix","clipboardCopy","state","modifiers","prefix","id","Fragment","clipboardCopyGroup","onClick","expandContent","textId","contentId","timer","window","clearTimeout","copied","setTimeout","string","bool","oneOfType","any","oneOf","number","func","node","isRequired","top","undefined"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nimport { TextInput } from '../TextInput';\nimport { TooltipPosition } from '../Tooltip';\nimport GenerateId from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nexport const clipboardCopyFunc = (event, text) => {\n  const clipboard = event.currentTarget.parentElement;\n  const el = document.createElement('input');\n  el.value = text.toString();\n  clipboard.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  clipboard.removeChild(el);\n};\nexport let ClipboardCopyVariant;\n\n(function (ClipboardCopyVariant) {\n  ClipboardCopyVariant[\"inline\"] = \"inline\";\n  ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\n\nexport class ClipboardCopy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"timer\", null);\n\n    _defineProperty(this, \"componentDidUpdate\", (prevProps, prevState) => {\n      if (prevProps.children !== this.props.children) {\n        this.updateText(this.props.children);\n      }\n    });\n\n    _defineProperty(this, \"expandContent\", _event => {\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    });\n\n    _defineProperty(this, \"updateText\", text => {\n      this.setState({\n        text\n      });\n      this.props.onChange(text);\n    });\n\n    _defineProperty(this, \"render\", () => {\n      const _this$props = this.props,\n            {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        isExpanded,\n        onChange,\n        // Don't pass to <div>\n\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        isReadOnly,\n        isCode,\n        exitDelay,\n        maxWidth,\n        entryDelay,\n        switchDelay,\n        onCopy,\n        hoverTip,\n        clickTip,\n        textAriaLabel,\n        toggleAriaLabel,\n        variant,\n        position,\n        className\n      } = _this$props,\n            divProps = _objectWithoutProperties(_this$props, [\"isExpanded\", \"onChange\", \"isReadOnly\", \"isCode\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"switchDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\"]);\n\n      const textIdPrefix = 'text-input-';\n      const toggleIdPrefix = 'toggle-';\n      const contentIdPrefix = 'content-';\n      return React.createElement(\"div\", _extends({\n        className: css(styles.clipboardCopy, this.state.expanded && styles.modifiers.expanded, className)\n      }, divProps), React.createElement(GenerateId, {\n        prefix: \"\"\n      }, id => React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.clipboardCopyGroup)\n      }, variant === 'expansion' && React.createElement(ClipboardCopyToggle, {\n        isExpanded: this.state.expanded,\n        onClick: this.expandContent,\n        id: `${toggleIdPrefix}-${id}`,\n        textId: `${textIdPrefix}-${id}`,\n        contentId: `${contentIdPrefix}-${id}`,\n        \"aria-label\": toggleAriaLabel\n      }), React.createElement(TextInput, {\n        isReadOnly: isReadOnly || this.state.expanded,\n        onChange: this.updateText,\n        value: this.state.text,\n        id: `text-input-${id}`,\n        \"aria-label\": textAriaLabel\n      }), React.createElement(ClipboardCopyButton, {\n        exitDelay: exitDelay,\n        entryDelay: entryDelay,\n        maxWidth: maxWidth,\n        position: position,\n        id: `copy-button-${id}`,\n        textId: `text-input-${id}`,\n        \"aria-label\": hoverTip,\n        onClick: event => {\n          if (this.timer) {\n            window.clearTimeout(this.timer);\n            this.setState({\n              copied: false\n            });\n          }\n\n          onCopy(event, this.state.text);\n          this.setState({\n            copied: true\n          }, () => {\n            this.timer = window.setTimeout(() => {\n              this.setState({\n                copied: false\n              });\n              this.timer = null;\n            }, switchDelay);\n          });\n        }\n      }, this.state.copied ? clickTip : hoverTip)), this.state.expanded && React.createElement(ClipboardCopyExpanded, {\n        isReadOnly: isReadOnly,\n        isCode: isCode,\n        id: `content-${id}`,\n        onChange: this.updateText\n      }, this.state.text))));\n    });\n\n    this.state = {\n      text: this.props.children,\n      expanded: this.props.isExpanded,\n      copied: false\n    };\n  }\n\n}\n\n_defineProperty(ClipboardCopy, \"propTypes\", {\n  className: _pt.string,\n  hoverTip: _pt.string,\n  clickTip: _pt.string,\n  textAriaLabel: _pt.string,\n  toggleAriaLabel: _pt.string,\n  isReadOnly: _pt.bool,\n  isExpanded: _pt.bool,\n  isCode: _pt.bool,\n  variant: _pt.oneOfType([_pt.any, _pt.oneOf(['inline']), _pt.oneOf(['expansion'])]),\n  position: _pt.oneOfType([_pt.any, _pt.oneOf(['auto']), _pt.oneOf(['top']), _pt.oneOf(['bottom']), _pt.oneOf(['left']), _pt.oneOf(['right'])]),\n  maxWidth: _pt.string,\n  exitDelay: _pt.number,\n  entryDelay: _pt.number,\n  switchDelay: _pt.number,\n  onCopy: _pt.func,\n  onChange: _pt.func,\n  children: _pt.node.isRequired\n});\n\n_defineProperty(ClipboardCopy, \"defaultProps\", {\n  hoverTip: 'Copy to clipboard',\n  clickTip: 'Successfully copied to clipboard!',\n  isReadOnly: false,\n  isExpanded: false,\n  isCode: false,\n  variant: 'inline',\n  position: TooltipPosition.top,\n  maxWidth: '150px',\n  exitDelay: 1600,\n  entryDelay: 100,\n  switchDelay: 2000,\n  onCopy: clipboardCopyFunc,\n  onChange: () => undefined,\n  textAriaLabel: 'Copyable input',\n  toggleAriaLabel: 'Show content'\n});\n//# sourceMappingURL=ClipboardCopy.js.map"]},"metadata":{},"sourceType":"module"}