{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport paginationStyles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownItem, DropdownDirection, DropdownWithContext, DropdownContext } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/js/icons/check-icon';\nimport { OptionsToggle } from './OptionsToggle';\nexport class PaginationOptionsMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"parentRef\", React.createRef());\n\n    _defineProperty(this, \"onToggle\", isOpen => {\n      this.setState({\n        isOpen\n      });\n    });\n\n    _defineProperty(this, \"onSelect\", () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    });\n\n    _defineProperty(this, \"handleNewPerPage\", (_evt, newPerPage) => {\n      const {\n        page,\n        onPerPageSelect,\n        itemCount,\n        defaultToFullPage\n      } = this.props;\n      let newPage = page;\n\n      while (Math.ceil(itemCount / newPerPage) < newPage) {\n        newPage--;\n      }\n\n      if (defaultToFullPage) {\n        if (itemCount / newPerPage !== newPage) {\n          while (newPage > 1 && itemCount - newPerPage * newPage < 0) {\n            newPage--;\n          }\n        }\n      }\n\n      const startIdx = (newPage - 1) * newPerPage;\n      const endIdx = newPage * newPerPage;\n      return onPerPageSelect(_evt, newPerPage, newPage, startIdx, endIdx);\n    });\n\n    _defineProperty(this, \"renderItems\", () => {\n      const {\n        perPageOptions,\n        perPage,\n        perPageSuffix\n      } = this.props;\n      return perPageOptions.map(({\n        value,\n        title\n      }) => React.createElement(DropdownItem, {\n        key: value,\n        component: \"button\",\n        \"data-action\": `per-page-${value}`,\n        className: css(perPage === value && 'pf-m-selected'),\n        onClick: event => this.handleNewPerPage(event, value)\n      }, title, React.createElement(\"span\", {\n        className: css(paginationStyles.paginationMenuText)\n      }, ` ${perPageSuffix}`), perPage === value && React.createElement(\"i\", {\n        className: css(styles.optionsMenuMenuItemIcon)\n      }, React.createElement(CheckIcon, null))));\n    });\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      widgetId,\n      isDisabled,\n      itemsPerPageTitle,\n      dropDirection,\n      optionsToggle,\n      perPageOptions,\n      toggleTemplate,\n      firstIndex,\n      lastIndex,\n      itemCount,\n      itemsTitle\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return React.createElement(DropdownContext.Provider, {\n      value: {\n        id: widgetId,\n        onSelect: this.onSelect,\n        toggleIconClass: styles.optionsMenuToggleIcon,\n        toggleTextClass: styles.optionsMenuToggleText,\n        menuClass: styles.optionsMenuMenu,\n        itemClass: styles.optionsMenuMenuItem,\n        toggleClass: ' ',\n        baseClass: styles.optionsMenu,\n        disabledClass: styles.modifiers.disabled,\n        menuComponent: 'ul',\n        baseComponent: 'div'\n      }\n    }, React.createElement(DropdownWithContext, {\n      direction: dropDirection,\n      isOpen: isOpen,\n      toggle: React.createElement(OptionsToggle, {\n        optionsToggle: optionsToggle,\n        itemsPerPageTitle: itemsPerPageTitle,\n        showToggle: perPageOptions && perPageOptions.length > 0,\n        onToggle: this.onToggle,\n        isOpen: isOpen,\n        widgetId: widgetId,\n        firstIndex: firstIndex,\n        lastIndex: lastIndex,\n        itemCount: itemCount,\n        itemsTitle: itemsTitle,\n        toggleTemplate: toggleTemplate,\n        parentRef: this.parentRef.current,\n        isDisabled: isDisabled\n      }),\n      dropdownItems: this.renderItems(),\n      isPlain: true\n    }));\n  }\n\n}\n\n_defineProperty(PaginationOptionsMenu, \"propTypes\", {\n  className: _pt.string,\n  widgetId: _pt.string,\n  isDisabled: _pt.bool,\n  dropDirection: _pt.oneOf(['up', 'down']),\n  perPageOptions: _pt.arrayOf(_pt.any),\n  itemsPerPageTitle: _pt.string,\n  page: _pt.number,\n  perPageSuffix: _pt.string,\n  itemsTitle: _pt.string,\n  optionsToggle: _pt.string,\n  itemCount: _pt.number,\n  firstIndex: _pt.number,\n  lastIndex: _pt.number,\n  defaultToFullPage: _pt.bool,\n  perPage: _pt.number,\n  lastPage: _pt.number,\n  toggleTemplate: _pt.oneOfType([_pt.func, _pt.string]),\n  onPerPageSelect: _pt.any\n});\n\n_defineProperty(PaginationOptionsMenu, \"defaultProps\", {\n  className: '',\n  widgetId: '',\n  isDisabled: false,\n  dropDirection: DropdownDirection.down,\n  perPageOptions: [],\n  itemsPerPageTitle: 'Items per page',\n  perPageSuffix: 'per page',\n  optionsToggle: 'Select',\n  perPage: 0,\n  firstIndex: 0,\n  lastIndex: 0,\n  defaultToFullPage: false,\n  itemCount: 0,\n  itemsTitle: 'items',\n  toggleTemplate: ({\n    firstIndex,\n    lastIndex,\n    itemCount,\n    itemsTitle\n  }) => React.createElement(React.Fragment, null, React.createElement(\"b\", null, firstIndex, \" - \", lastIndex), ' ', \"of\", React.createElement(\"b\", null, itemCount), \" \", itemsTitle),\n  onPerPageSelect: () => null\n});","map":{"version":3,"sources":["C:/Users/tungb/Desktop/ExperienceBU/experiencebu/node_modules/@patternfly/react-core/dist/esm/components/Pagination/PaginationOptionsMenu.js"],"names":["_pt","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","styles","paginationStyles","css","DropdownItem","DropdownDirection","DropdownWithContext","DropdownContext","CheckIcon","OptionsToggle","PaginationOptionsMenu","Component","constructor","props","createRef","isOpen","setState","prevState","_evt","newPerPage","page","onPerPageSelect","itemCount","defaultToFullPage","newPage","Math","ceil","startIdx","endIdx","perPageOptions","perPage","perPageSuffix","map","title","createElement","component","className","onClick","event","handleNewPerPage","paginationMenuText","optionsMenuMenuItemIcon","state","render","widgetId","isDisabled","itemsPerPageTitle","dropDirection","optionsToggle","toggleTemplate","firstIndex","lastIndex","itemsTitle","Provider","id","onSelect","toggleIconClass","optionsMenuToggleIcon","toggleTextClass","optionsMenuToggleText","menuClass","optionsMenuMenu","itemClass","optionsMenuMenuItem","toggleClass","baseClass","optionsMenu","disabledClass","modifiers","disabled","menuComponent","baseComponent","direction","toggle","showToggle","length","onToggle","parentRef","current","dropdownItems","renderItems","isPlain","string","bool","oneOf","arrayOf","any","number","lastPage","oneOfType","func","down","Fragment"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport paginationStyles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownItem, DropdownDirection, DropdownWithContext, DropdownContext } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/js/icons/check-icon';\nimport { OptionsToggle } from './OptionsToggle';\nexport class PaginationOptionsMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"parentRef\", React.createRef());\n\n    _defineProperty(this, \"onToggle\", isOpen => {\n      this.setState({\n        isOpen\n      });\n    });\n\n    _defineProperty(this, \"onSelect\", () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    });\n\n    _defineProperty(this, \"handleNewPerPage\", (_evt, newPerPage) => {\n      const {\n        page,\n        onPerPageSelect,\n        itemCount,\n        defaultToFullPage\n      } = this.props;\n      let newPage = page;\n\n      while (Math.ceil(itemCount / newPerPage) < newPage) {\n        newPage--;\n      }\n\n      if (defaultToFullPage) {\n        if (itemCount / newPerPage !== newPage) {\n          while (newPage > 1 && itemCount - newPerPage * newPage < 0) {\n            newPage--;\n          }\n        }\n      }\n\n      const startIdx = (newPage - 1) * newPerPage;\n      const endIdx = newPage * newPerPage;\n      return onPerPageSelect(_evt, newPerPage, newPage, startIdx, endIdx);\n    });\n\n    _defineProperty(this, \"renderItems\", () => {\n      const {\n        perPageOptions,\n        perPage,\n        perPageSuffix\n      } = this.props;\n      return perPageOptions.map(({\n        value,\n        title\n      }) => React.createElement(DropdownItem, {\n        key: value,\n        component: \"button\",\n        \"data-action\": `per-page-${value}`,\n        className: css(perPage === value && 'pf-m-selected'),\n        onClick: event => this.handleNewPerPage(event, value)\n      }, title, React.createElement(\"span\", {\n        className: css(paginationStyles.paginationMenuText)\n      }, ` ${perPageSuffix}`), perPage === value && React.createElement(\"i\", {\n        className: css(styles.optionsMenuMenuItemIcon)\n      }, React.createElement(CheckIcon, null))));\n    });\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      widgetId,\n      isDisabled,\n      itemsPerPageTitle,\n      dropDirection,\n      optionsToggle,\n      perPageOptions,\n      toggleTemplate,\n      firstIndex,\n      lastIndex,\n      itemCount,\n      itemsTitle\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return React.createElement(DropdownContext.Provider, {\n      value: {\n        id: widgetId,\n        onSelect: this.onSelect,\n        toggleIconClass: styles.optionsMenuToggleIcon,\n        toggleTextClass: styles.optionsMenuToggleText,\n        menuClass: styles.optionsMenuMenu,\n        itemClass: styles.optionsMenuMenuItem,\n        toggleClass: ' ',\n        baseClass: styles.optionsMenu,\n        disabledClass: styles.modifiers.disabled,\n        menuComponent: 'ul',\n        baseComponent: 'div'\n      }\n    }, React.createElement(DropdownWithContext, {\n      direction: dropDirection,\n      isOpen: isOpen,\n      toggle: React.createElement(OptionsToggle, {\n        optionsToggle: optionsToggle,\n        itemsPerPageTitle: itemsPerPageTitle,\n        showToggle: perPageOptions && perPageOptions.length > 0,\n        onToggle: this.onToggle,\n        isOpen: isOpen,\n        widgetId: widgetId,\n        firstIndex: firstIndex,\n        lastIndex: lastIndex,\n        itemCount: itemCount,\n        itemsTitle: itemsTitle,\n        toggleTemplate: toggleTemplate,\n        parentRef: this.parentRef.current,\n        isDisabled: isDisabled\n      }),\n      dropdownItems: this.renderItems(),\n      isPlain: true\n    }));\n  }\n\n}\n\n_defineProperty(PaginationOptionsMenu, \"propTypes\", {\n  className: _pt.string,\n  widgetId: _pt.string,\n  isDisabled: _pt.bool,\n  dropDirection: _pt.oneOf(['up', 'down']),\n  perPageOptions: _pt.arrayOf(_pt.any),\n  itemsPerPageTitle: _pt.string,\n  page: _pt.number,\n  perPageSuffix: _pt.string,\n  itemsTitle: _pt.string,\n  optionsToggle: _pt.string,\n  itemCount: _pt.number,\n  firstIndex: _pt.number,\n  lastIndex: _pt.number,\n  defaultToFullPage: _pt.bool,\n  perPage: _pt.number,\n  lastPage: _pt.number,\n  toggleTemplate: _pt.oneOfType([_pt.func, _pt.string]),\n  onPerPageSelect: _pt.any\n});\n\n_defineProperty(PaginationOptionsMenu, \"defaultProps\", {\n  className: '',\n  widgetId: '',\n  isDisabled: false,\n  dropDirection: DropdownDirection.down,\n  perPageOptions: [],\n  itemsPerPageTitle: 'Items per page',\n  perPageSuffix: 'per page',\n  optionsToggle: 'Select',\n  perPage: 0,\n  firstIndex: 0,\n  lastIndex: 0,\n  defaultToFullPage: false,\n  itemCount: 0,\n  itemsTitle: 'items',\n  toggleTemplate: ({\n    firstIndex,\n    lastIndex,\n    itemCount,\n    itemsTitle\n  }) => React.createElement(React.Fragment, null, React.createElement(\"b\", null, firstIndex, \" - \", lastIndex), ' ', \"of\", React.createElement(\"b\", null, itemCount), \" \", itemsTitle),\n  onPerPageSelect: () => null\n});\n//# sourceMappingURL=PaginationOptionsMenu.js.map"]},"metadata":{},"sourceType":"module"}