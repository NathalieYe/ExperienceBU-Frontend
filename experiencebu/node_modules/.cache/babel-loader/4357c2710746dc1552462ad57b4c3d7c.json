{"ast":null,"code":"import _pt from \"prop-types\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { ApplicationLauncherIcon } from './ApplicationLauncherIcon';\nimport { ApplicationLauncherText } from './ApplicationLauncherText';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItem';\nexport const ApplicationLauncherContent = ({\n  children\n}) => React.createElement(ApplicationLauncherItemContext.Consumer, null, ({\n  isExternal,\n  icon\n}) => React.createElement(React.Fragment, null, icon && React.createElement(ApplicationLauncherIcon, null, icon), icon ? React.createElement(ApplicationLauncherText, null, children) : children, isExternal && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  className: css(styles.appLauncherMenuItemExternalIcon)\n}, React.createElement(ExternalLinkAltIcon, null)), React.createElement(\"span\", {\n  className: css(accessibleStyles.screenReader)\n}, \"(opens new window)\"))));\nApplicationLauncherContent.propTypes = {\n  children: _pt.node.isRequired\n};","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherContent.js"],"names":["_pt","React","css","styles","accessibleStyles","ApplicationLauncherIcon","ApplicationLauncherText","ExternalLinkAltIcon","ApplicationLauncherItemContext","ApplicationLauncherContent","children","createElement","Consumer","isExternal","icon","Fragment","className","appLauncherMenuItemExternalIcon","screenReader","propTypes","node","isRequired"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,OAAOC,gBAAP,MAA6B,oEAA7B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,OAAOC,mBAAP,MAAgC,8DAAhC;AACA,SAASC,8BAAT,QAA+C,2BAA/C;AACA,OAAO,MAAMC,0BAA0B,GAAG,CAAC;AACzCC,EAAAA;AADyC,CAAD,KAEpCT,KAAK,CAACU,aAAN,CAAoBH,8BAA8B,CAACI,QAAnD,EAA6D,IAA7D,EAAmE,CAAC;AACxEC,EAAAA,UADwE;AAExEC,EAAAA;AAFwE,CAAD,KAGnEb,KAAK,CAACU,aAAN,CAAoBV,KAAK,CAACc,QAA1B,EAAoC,IAApC,EAA0CD,IAAI,IAAIb,KAAK,CAACU,aAAN,CAAoBN,uBAApB,EAA6C,IAA7C,EAAmDS,IAAnD,CAAlD,EAA4GA,IAAI,GAAGb,KAAK,CAACU,aAAN,CAAoBL,uBAApB,EAA6C,IAA7C,EAAmDI,QAAnD,CAAH,GAAkEA,QAAlL,EAA4LG,UAAU,IAAIZ,KAAK,CAACU,aAAN,CAAoBV,KAAK,CAACc,QAA1B,EAAoC,IAApC,EAA0Cd,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AACpRK,EAAAA,SAAS,EAAEd,GAAG,CAACC,MAAM,CAACc,+BAAR;AADsQ,CAA5B,EAEvPhB,KAAK,CAACU,aAAN,CAAoBJ,mBAApB,EAAyC,IAAzC,CAFuP,CAA1C,EAE5JN,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC9EK,EAAAA,SAAS,EAAEd,GAAG,CAACE,gBAAgB,CAACc,YAAlB;AADgE,CAA5B,EAEjD,oBAFiD,CAF4J,CAA1M,CAHA,CAFC;AAUPT,0BAA0B,CAACU,SAA3B,GAAuC;AACrCT,EAAAA,QAAQ,EAAEV,GAAG,CAACoB,IAAJ,CAASC;AADkB,CAAvC","sourcesContent":["import _pt from \"prop-types\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { ApplicationLauncherIcon } from './ApplicationLauncherIcon';\nimport { ApplicationLauncherText } from './ApplicationLauncherText';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItem';\nexport const ApplicationLauncherContent = ({\n  children\n}) => React.createElement(ApplicationLauncherItemContext.Consumer, null, ({\n  isExternal,\n  icon\n}) => React.createElement(React.Fragment, null, icon && React.createElement(ApplicationLauncherIcon, null, icon), icon ? React.createElement(ApplicationLauncherText, null, children) : children, isExternal && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  className: css(styles.appLauncherMenuItemExternalIcon)\n}, React.createElement(ExternalLinkAltIcon, null)), React.createElement(\"span\", {\n  className: css(accessibleStyles.screenReader)\n}, \"(opens new window)\"))));\nApplicationLauncherContent.propTypes = {\n  children: _pt.node.isRequired\n};\n//# sourceMappingURL=ApplicationLauncherContent.js.map"]},"metadata":{},"sourceType":"module"}