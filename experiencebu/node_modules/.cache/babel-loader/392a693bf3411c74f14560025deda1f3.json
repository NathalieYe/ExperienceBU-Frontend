{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n *\n * Component.propTypes = {\n *  id: PropTypes.string\n * }\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nlet currentId = 0;\nconst propTypes = {\n  /** String to prefix the random id with */\n  prefix: PropTypes.string,\n\n  /** Component to be rendered with the generated id */\n  children: PropTypes.func.isRequired\n};\n\nclass GenerateId extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"id\", `${this.props.prefix}${currentId++}`);\n  }\n\n  render() {\n    return this.props.children(this.id);\n  }\n\n}\n\n_defineProperty(GenerateId, \"defaultProps\", {\n  prefix: 'pf-random-id-'\n});\n\n_defineProperty(GenerateId, \"propTypes\", propTypes);\n\nexport default GenerateId;","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","PropTypes","currentId","propTypes","prefix","string","children","func","isRequired","GenerateId","Component","constructor","args","props","render","id"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;AAEjN;;;;;;;;;;;;;;;;;;AAgBA,OAAOQ,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,MAAMC,SAAS,GAAG;AAChB;AACAC,EAAAA,MAAM,EAAEH,SAAS,CAACI,MAFF;;AAIhB;AACAC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IAAV,CAAeC;AALT,CAAlB;;AAQA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;;AAEArB,IAAAA,eAAe,CAAC,IAAD,EAAO,IAAP,EAAc,GAAE,KAAKsB,KAAL,CAAWT,MAAO,GAAEF,SAAS,EAAG,EAAhD,CAAf;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKD,KAAL,CAAWP,QAAX,CAAoB,KAAKS,EAAzB,CAAP;AACD;;AATsC;;AAazCxB,eAAe,CAACkB,UAAD,EAAa,cAAb,EAA6B;AAC1CL,EAAAA,MAAM,EAAE;AADkC,CAA7B,CAAf;;AAIAb,eAAe,CAACkB,UAAD,EAAa,WAAb,EAA0BN,SAA1B,CAAf;;AAEA,eAAeM,UAAf","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n *\n * Component.propTypes = {\n *  id: PropTypes.string\n * }\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nlet currentId = 0;\nconst propTypes = {\n  /** String to prefix the random id with */\n  prefix: PropTypes.string,\n\n  /** Component to be rendered with the generated id */\n  children: PropTypes.func.isRequired\n};\n\nclass GenerateId extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"id\", `${this.props.prefix}${currentId++}`);\n  }\n\n  render() {\n    return this.props.children(this.id);\n  }\n\n}\n\n_defineProperty(GenerateId, \"defaultProps\", {\n  prefix: 'pf-random-id-'\n});\n\n_defineProperty(GenerateId, \"propTypes\", propTypes);\n\nexport default GenerateId;\n//# sourceMappingURL=GenerateId.js.map"]},"metadata":{},"sourceType":"module"}