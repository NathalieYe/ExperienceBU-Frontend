{"ast":null,"code":"/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n  // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n  const classes = [];\n  const hasOwn = {}.hasOwnProperty;\n  args.filter(Boolean).forEach(arg => {\n    const argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner = css(...arg);\n\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (const key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n  return classes.join(' ');\n}","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/node_modules/@patternfly/react-styles/dist/esm/index.js"],"names":["css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join"],"mappings":"AAAA;;;;AAIA,OAAO,SAASA,GAAT,CAAa,GAAGC,IAAhB,EAAsB;AAC3B;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,MAAM,GAAG,GAAGC,cAAlB;AACAH,EAAAA,IAAI,CAACI,MAAL,CAAYC,OAAZ,EAAqBC,OAArB,CAA6BC,GAAG,IAAI;AAClC,UAAMC,OAAO,GAAG,OAAOD,GAAvB;;AAEA,QAAIC,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,QAAxC,EAAkD;AAChDP,MAAAA,OAAO,CAACQ,IAAR,CAAaF,GAAb;AACD,KAFD,MAEO,IAAIG,KAAK,CAACC,OAAN,CAAcJ,GAAd,KAAsBA,GAAG,CAACK,MAA9B,EAAsC;AAC3C,YAAMC,KAAK,GAAGd,GAAG,CAAC,GAAGQ,GAAJ,CAAjB;;AAEA,UAAIM,KAAJ,EAAW;AACTZ,QAAAA,OAAO,CAACQ,IAAR,CAAaI,KAAb;AACD;AACF,KANM,MAMA,IAAIL,OAAO,KAAK,QAAhB,EAA0B;AAC/B,WAAK,MAAMM,GAAX,IAAkBP,GAAlB,EAAuB;AACrB,YAAIL,MAAM,CAACa,IAAP,CAAYR,GAAZ,EAAiBO,GAAjB,KAAyBP,GAAG,CAACO,GAAD,CAAhC,EAAuC;AACrCb,UAAAA,OAAO,CAACQ,IAAR,CAAaK,GAAb;AACD;AACF;AACF;AACF,GAlBD;AAmBA,SAAOb,OAAO,CAACe,IAAR,CAAa,GAAb,CAAP;AACD","sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n  // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n  const classes = [];\n  const hasOwn = {}.hasOwnProperty;\n  args.filter(Boolean).forEach(arg => {\n    const argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner = css(...arg);\n\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (const key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n  return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}