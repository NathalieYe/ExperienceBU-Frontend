{"ast":null,"code":"var _jsxFileName = \"/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/src/components/ClubPage/ClubPage.js\";\nimport React from 'react';\nimport { Avatar, Brand, Button, ButtonVariant, Card, CardHead, CardActions, CardHeader, CardBody, Checkbox, Dropdown, DropdownToggle, DropdownItem, DropdownSeparator, DropdownPosition, DropdownDirection, DropdownToggleCheckbox, Gallery, GalleryItem, KebabToggle, Nav, NavItem, NavList, NavVariants, Page, PageHeader, PageSection, PageSectionVariants, PageSidebar, Pagination, Select, SelectOption, SkipToContent, TextContent, Text, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { DataToolbar, DataToolbarContent, DataToolbarFilter, DataToolbarToggleGroup, DataToolbarGroup, DataToolbarItem } from '@patternfly/react-core/dist/esm/experimental'; // make sure you've installed @patternfly/patternfly\n\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport spacingStyles from '@patternfly/react-styles/css/utilities/Spacing/spacing';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon, FilterIcon, TrashIcon } from '@patternfly/react-icons';\nimport imgBrand from \"@patternfly/react-core/src/demos/PageLayout/examples/imgBrand.svg\";\nimport imgAvatar from \"@patternfly/react-core/src/demos/PageLayout/examples/imgAvatar.svg\";\nimport pfIcon from \"./pf-logo-small.svg\";\nimport activeMQIcon from './activemq-core_200x150.png';\nimport avroIcon from './camel-avro_200x150.png';\nimport dropBoxIcon from './camel-dropbox_200x150.png';\nimport infinispanIcon from './camel-infinispan_200x150.png';\nimport saxonIcon from './camel-saxon_200x150.png';\nimport sparkIcon from './camel-spark_200x150.png';\nimport swaggerIcon from './camel-swagger-java_200x150.png';\nimport azureIcon from './FuseConnector_Icons_AzureServices.png';\nimport restIcon from './FuseConnector_Icons_REST.png';\n\nclass CardViewBasic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n    this.state = {\n      filters: {\n        products: []\n      },\n      res: [],\n      selectedItems: [],\n      areAllSelected: false,\n      itemsCheckedByDefault: false,\n      isUpperToolbarDropdownOpen: false,\n      isUpperToolbarKebabDropdownOpen: false,\n      isLowerToolbarDropdownOpen: false,\n      isLowerToolbarKebabDropdownOpen: false,\n      isCardKebabDropdownOpen: false,\n      activeItem: 0,\n      splitButtonDropdownIsOpen: false,\n      page: 1,\n      perPage: 10,\n      totalItemCount: 10\n    };\n\n    this.onPageDropdownToggle = isUpperToolbarDropdownOpen => {\n      this.setState({\n        isUpperToolbarDropdownOpen\n      });\n    };\n\n    this.onPageDropdownSelect = event => {\n      this.setState({\n        isUpperToolbarDropdownOpen: !this.state.isUpperToolbarDropdownOpen\n      });\n    };\n\n    this.onPageToolbarDropdownToggle = isPageToolbarDropdownOpen => {\n      this.setState({\n        isPageToolbarDropdownOpen\n      });\n    };\n\n    this.onPageToolbarKebabDropdownToggle = isUpperToolbarKebabDropdownOpen => {\n      this.setState({\n        isUpperToolbarKebabDropdownOpen\n      });\n    };\n\n    this.onToolbarDropdownToggle = isLowerToolbarDropdownOpen => {\n      this.setState(prevState => ({\n        isLowerToolbarDropdownOpen\n      }));\n    };\n\n    this.onToolbarDropdownSelect = event => {\n      this.setState({\n        isLowerToolbarDropdownOpen: !this.state.isLowerToolbarDropdownOpen\n      });\n    };\n\n    this.onToolbarKebabDropdownToggle = isLowerToolbarKebabDropdownOpen => {\n      this.setState({\n        isLowerToolbarKebabDropdownOpen\n      });\n    };\n\n    this.onToolbarKebabDropdownSelect = event => {\n      this.setState({\n        isLowerToolbarKebabDropdownOpen: !this.state.isLowerToolbarKebabDropdownOpen\n      });\n    };\n\n    this.onCardKebabDropdownToggle = (key, isCardKebabDropdownOpen) => {\n      this.setState({\n        [key]: isCardKebabDropdownOpen\n      });\n    };\n\n    this.onCardKebabDropdownSelect = (key, event) => {\n      this.setState({\n        [key]: !this.state[key]\n      });\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n\n    this.deleteItem = item => event => {\n      const filter = getter => val => getter(val) !== item.id;\n\n      this.setState({\n        res: this.state.res.filter(filter(({\n          id\n        }) => id)),\n        selectedItems: this.state.selectedItems.filter(filter(id => id))\n      });\n    };\n\n    this.onSetPage = (_event, pageNumber) => {\n      this.setState({\n        page: pageNumber\n      });\n    };\n\n    this.onPerPageSelect = (_event, perPage) => {\n      this.setState({\n        perPage\n      });\n    };\n\n    this.onSplitButtonToggle = isOpen => {\n      this.setState({\n        splitButtonDropdownIsOpen: isOpen\n      });\n    };\n\n    this.onSplitButtonSelect = event => {\n      this.setState((prevState, props) => {\n        return {\n          splitButtonDropdownIsOpen: !prevState.splitButtonDropdownIsOpen\n        };\n      });\n    };\n\n    this.onNameSelect = (event, selection) => {\n      const checked = event.target.checked;\n      this.setState(prevState => {\n        const prevSelections = prevState.filters['products'];\n        return {\n          filters: { ...prevState.filters,\n            ['products']: checked ? [...prevSelections, selection] : prevSelections.filter(value => value !== selection)\n          }\n        };\n      });\n    };\n\n    this.onDelete = (type = '', id = '') => {\n      if (type) {\n        this.setState(prevState => {\n          prevState.filters[type.toLowerCase()] = prevState.filters[type.toLowerCase()].filter(s => s !== id);\n          return {\n            filters: prevState.filters\n          };\n        });\n      } else {\n        this.setState({\n          filters: {\n            products: []\n          }\n        });\n      }\n    };\n  }\n\n  selectedItems(e) {\n    const {\n      value,\n      checked\n    } = e.target;\n    let {\n      selectedItems\n    } = this.state;\n\n    if (checked) {\n      selectedItems = [...selectedItems, value];\n    } else {\n      selectedItems = selectedItems.filter(el => el !== value);\n\n      if (this.state.areAllSelected) {\n        this.setState({\n          areAllSelected: !this.state.areAllSelected\n        });\n      }\n    }\n\n    this.setState({\n      selectedItems\n    });\n  }\n\n  splitCheckboxSelectAll(e) {\n    const {\n      checked\n    } = e.target;\n    const {\n      isChecked,\n      res\n    } = this.state;\n    let collection = [];\n\n    if (checked) {\n      for (var i = 0; i <= 9; i++) collection = [...collection, i];\n    }\n\n    this.setState({\n      selectedItems: collection,\n      isChecked: isChecked,\n      areAllSelected: checked\n    }, this.updateSelected);\n  }\n\n  selectPage(e) {\n    const {\n      checked\n    } = e.target;\n    const {\n      isChecked,\n      totalItemCount,\n      perPage\n    } = this.state;\n    let collection = [];\n    collection = this.getAllItems();\n    this.setState({\n      selectedItems: collection,\n      isChecked: checked,\n      areAllSelected: totalItemCount === perPage ? true : false\n    }, this.updateSelected);\n  }\n\n  selectAll(e) {\n    const {\n      checked\n    } = e.target;\n    const {\n      isChecked\n    } = this.state;\n    let collection = [];\n\n    for (var i = 0; i <= 9; i++) collection = [...collection, i];\n\n    this.setState({\n      selectedItems: collection,\n      isChecked: true,\n      areAllSelected: true\n    }, this.updateSelected);\n  }\n\n  selectNone(e) {\n    const {\n      checked\n    } = e.target;\n    const {\n      isChecked,\n      selectedItems\n    } = this.state;\n    this.setState({\n      selectedItems: [],\n      isChecked: false,\n      areAllSelected: false\n    }, this.updateSelected);\n  }\n\n  getAllItems() {\n    const {\n      res\n    } = this.state;\n    const collection = [];\n\n    for (const items of res) {\n      collection.push(items.id);\n    }\n\n    return collection;\n  }\n\n  handleCheckboxClick(checked, e) {\n    const {\n      value\n    } = e.target;\n    const {\n      totalItemCount\n    } = this.state;\n\n    if (checked) {\n      const collection = this.getAllItems();\n      this.setState(prevState => ({\n        selectedItems: [...prevState.selectedItems, value * 1],\n        areAllSelected: totalItemCount === prevState.selectedItems.length + 1\n      }));\n    } else {\n      this.setState(prevState => ({\n        selectedItems: prevState.selectedItems.filter(item => item != value),\n        areAllSelected: false\n      }));\n    }\n  }\n\n  updateSelected() {\n    const {\n      res,\n      selectedItems\n    } = this.state;\n    let rows = res.map(post => {\n      post.selected = selectedItems.includes(post.id);\n      return post;\n    });\n    this.setState({\n      res: rows\n    });\n  }\n\n  fetch(page, perPage) {\n    fetch(`https://my-json-server.typicode.com/jenny-s51/cardviewdata/posts?_page=${page}&_limit=${perPage}`).then(resp => resp.json()).then(resp => this.setState({\n      res: resp,\n      perPage,\n      page\n    })).then(() => this.updateSelected()).catch(err => this.setState({\n      error: err\n    }));\n  }\n\n  componentDidMount() {\n    this.fetch(this.state.page, this.state.perPage);\n  }\n\n  renderPagination() {\n    const {\n      page,\n      perPage,\n      totalItemCount\n    } = this.state;\n    const defaultPerPageOptions = [{\n      title: '1',\n      value: 1\n    }, {\n      title: '5',\n      value: 5\n    }, {\n      title: '10',\n      value: 10\n    }];\n    return React.createElement(Pagination, {\n      itemCount: totalItemCount,\n      page: page,\n      perPage: perPage,\n      perPageOptions: defaultPerPageOptions,\n      onSetPage: (_evt, value) => {\n        this.fetch(value, perPage);\n      },\n      onPerPageSelect: (_evt, value) => {\n        this.fetch(1, value);\n      },\n      variant: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    });\n  }\n\n  buildSelectDropdown() {\n    const {\n      splitButtonDropdownIsOpen,\n      selectedItems,\n      areAllSelected\n    } = this.state;\n    const numSelected = selectedItems.length;\n    const allSelected = areAllSelected;\n    const anySelected = numSelected > 0;\n    const someChecked = anySelected ? null : false;\n    const isChecked = allSelected ? true : someChecked;\n    const splitButtonDropdownItems = [React.createElement(DropdownItem, {\n      key: \"item-1\",\n      onClick: this.selectNone.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Select none (0 items)\"), React.createElement(DropdownItem, {\n      key: \"item-2\",\n      onClick: this.selectPage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Select page (\", this.state.perPage, \" items)\"), React.createElement(DropdownItem, {\n      key: \"item-3\",\n      onClick: this.selectAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Select all (\", this.state.totalItemCount, \" items)\")];\n    return React.createElement(Dropdown, {\n      position: DropdownPosition.left,\n      onSelect: this.onSplitButtonSelect,\n      toggle: React.createElement(DropdownToggle, {\n        splitButtonItems: [React.createElement(DropdownToggleCheckbox, {\n          id: \"example-checkbox-2\",\n          key: \"split-checkbox\",\n          \"aria-label\": anySelected ? 'Deselect all' : 'Select all',\n          isChecked: areAllSelected,\n          onClick: this.splitCheckboxSelectAll.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        })],\n        onToggle: this.onSplitButtonToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, numSelected !== 0 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, numSelected, \" selected\")),\n      isOpen: splitButtonDropdownIsOpen,\n      dropdownItems: splitButtonDropdownItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    });\n  }\n\n  buildFilterDropdown() {\n    const {\n      isLowerToolbarDropdownOpen,\n      filters\n    } = this.state;\n    const filterDropdownItems = [React.createElement(SelectOption, {\n      key: \"patternfly\",\n      value: \"Patternfly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"activemq\",\n      value: \"ActiveMQ\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"apachespark\",\n      value: \"Apache Spark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"avro\",\n      value: \"Avro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"azureservices\",\n      value: \"Azure Services\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"crypto\",\n      value: \"Crypto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"dropbox\",\n      value: \"DropBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"jbossdatagrid\",\n      value: \"JBoss Data Grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"rest\",\n      value: \"REST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }), React.createElement(SelectOption, {\n      key: \"swagger\",\n      value: \"SWAGGER\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    })];\n    return React.createElement(DataToolbarFilter, {\n      categoryName: \"Products\",\n      chips: filters.products,\n      deleteChip: this.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Select, {\n      variant: SelectVariant.checkbox,\n      \"aria-label\": \"Products\",\n      onToggle: this.onToolbarDropdownToggle,\n      onSelect: this.onNameSelect,\n      selections: filters.products,\n      isExpanded: isLowerToolbarDropdownOpen,\n      placeholderText: \"Creator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, filterDropdownItems));\n  }\n\n  render() {\n    const {\n      isUpperToolbarDropdownOpen,\n      isLowerToolbarDropdownOpen,\n      isUpperToolbarKebabDropdownOpen,\n      isLowerToolbarKebabDropdownOpen,\n      isCardKebabDropdownOpen,\n      splitButtonDropdownIsOpen,\n      activeItem,\n      filters,\n      res,\n      checked,\n      selectedItems,\n      itemsCheckedByDefault,\n      areAllSelected,\n      isChecked\n    } = this.state;\n    const toolbarKebabDropdownItems = [React.createElement(DropdownItem, {\n      key: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Link\"), React.createElement(DropdownItem, {\n      key: \"action\",\n      component: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \"Action\"), React.createElement(DropdownItem, {\n      key: \"disabled link\",\n      isDisabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, \"Disabled Link\"), React.createElement(DropdownItem, {\n      key: \"disabled action\",\n      isDisabled: true,\n      component: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Disabled Action\"), React.createElement(DropdownSeparator, {\n      key: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      key: \"separated link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, \"Separated Link\"), React.createElement(DropdownItem, {\n      key: \"separated action\",\n      component: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, \"Separated Action\")];\n    const toolbarItems = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(DataToolbarItem, {\n      variant: \"bulk-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, this.buildSelectDropdown()), React.createElement(DataToolbarItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, this.buildFilterDropdown()), React.createElement(DataToolbarItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"Create a Project\")), React.createElement(DataToolbarItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onSelect: this.onToolbarKebabDropdownSelect,\n      toggle: React.createElement(KebabToggle, {\n        onToggle: this.onToolbarKebabDropdownToggle,\n        id: \"toggle-id-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }),\n      isOpen: isLowerToolbarKebabDropdownOpen,\n      isPlain: true,\n      dropdownItems: toolbarKebabDropdownItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(DataToolbarItem, {\n      variant: \"pagination\",\n      breakpointMods: [{\n        modifier: 'align-right'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, this.renderPagination()));\n    const PageNav = React.createElement(Nav, {\n      onSelect: this.onNavSelect,\n      \"aria-label\": \"Nav\",\n      theme: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(NavList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      itemId: 0,\n      isActive: activeItem === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"System Panel\"), React.createElement(NavItem, {\n      itemId: 1,\n      isActive: activeItem === 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, \"Policy\"), React.createElement(NavItem, {\n      itemId: 2,\n      isActive: activeItem === 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, \"Authentication\"), React.createElement(NavItem, {\n      itemId: 3,\n      isActive: activeItem === 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, \"Network Services\"), React.createElement(NavItem, {\n      itemId: 4,\n      isActive: activeItem === 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, \"Server\")));\n    const userDropdownItems = [React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, \"Link\"), React.createElement(DropdownItem, {\n      component: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, \"Action\"), React.createElement(DropdownItem, {\n      isDisabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, \"Disabled Link\"), React.createElement(DropdownItem, {\n      isDisabled: true,\n      component: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"Disabled Action\"), React.createElement(DropdownSeparator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"Separated Link\"), React.createElement(DropdownItem, {\n      component: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, \"Separated Action\")];\n    const PageToolbar = React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(ToolbarGroup, {\n      className: css(accessibleStyles.screenReader, accessibleStyles.visibleOnLg),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(ToolbarItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"default-example-uid-01\",\n      \"aria-label\": \"Notifications actions\",\n      variant: ButtonVariant.plain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(BellIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }))), React.createElement(ToolbarItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"default-example-uid-02\",\n      \"aria-label\": \"Settings actions\",\n      variant: ButtonVariant.plain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, React.createElement(CogIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    })))), React.createElement(ToolbarGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, React.createElement(ToolbarItem, {\n      className: css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      isPlain: true,\n      position: \"right\",\n      onSelect: this.onKebabDropdownSelect,\n      toggle: React.createElement(KebabToggle, {\n        onToggle: this.onPageToolbarKebabDropdownToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }),\n      isOpen: isUpperToolbarKebabDropdownOpen,\n      dropdownItems: toolbarKebabDropdownItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    })), React.createElement(ToolbarItem, {\n      className: css(accessibleStyles.screenReader, accessibleStyles.visibleOnMd),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      isPlain: true,\n      position: \"right\",\n      onSelect: this.onPageDropdownSelect,\n      isOpen: isUpperToolbarDropdownOpen,\n      toggle: React.createElement(DropdownToggle, {\n        onToggle: this.onPageDropdownToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, \"Kyle Baker\"),\n      dropdownItems: userDropdownItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }))));\n    const Header = React.createElement(PageHeader, {\n      logo: React.createElement(Brand, {\n        src: imgBrand,\n        alt: \"Patternfly Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }),\n      toolbar: PageToolbar,\n      avatar: React.createElement(Avatar, {\n        src: imgAvatar,\n        alt: \"Avatar image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }),\n      showNavToggle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    });\n    const Sidebar = React.createElement(PageSidebar, {\n      nav: PageNav,\n      theme: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    });\n    const pageId = 'main-content-card-view-default-nav';\n    const PageSkipToContent = React.createElement(SkipToContent, {\n      href: `#${pageId}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, \"Skip to Content\");\n    const filtered = filters.products.length > 0 ? res.filter(card => {\n      return filters.products.length === 0 || filters.products.includes(card.name);\n    }) : res;\n    const icons = {\n      pfIcon,\n      activeMQIcon,\n      sparkIcon,\n      avroIcon,\n      azureIcon,\n      saxonIcon,\n      dropBoxIcon,\n      infinispanIcon,\n      restIcon,\n      swaggerIcon\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(Page, {\n      header: Header,\n      sidebar: Sidebar,\n      isManagedSidebar: true,\n      skipToContent: PageSkipToContent,\n      mainContainerId: pageId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, React.createElement(PageSection, {\n      variant: PageSectionVariants.light,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(TextContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(Text, {\n      component: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, \"Projects\"), React.createElement(Text, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, \"This is a demo that showcases Patternfly Cards.\")), React.createElement(DataToolbar, {\n      id: \"data-toolbar-group-types\",\n      clearAllFilters: this.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(DataToolbarContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, toolbarItems))), React.createElement(PageSection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }, React.createElement(Gallery, {\n      gutter: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, filtered.map((product, key) => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(Card, {\n      isHoverable: true,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(CardHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icons[product.icon],\n      alt: `${product.name} icon`,\n      style: {\n        height: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      isPlain: true,\n      position: \"right\",\n      onSelect: e => this.onCardKebabDropdownSelect(key, e),\n      toggle: React.createElement(KebabToggle, {\n        onToggle: isCardKebabDropdownOpen => this.onCardKebabDropdownToggle(key, isCardKebabDropdownOpen),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }),\n      isOpen: this.state[key],\n      dropdownItems: [React.createElement(DropdownItem, {\n        onClick: this.deleteItem(product),\n        position: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, React.createElement(TrashIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), \"Delete\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      checked: isChecked,\n      value: product.id,\n      selectedItems: selectedItems,\n      areAllSelected: areAllSelected,\n      onChange: this.handleCheckboxClick,\n      isChecked: selectedItems.includes(product.id),\n      defaultChecked: this.state.itemsCheckedByDefault,\n      \"aria-label\": \"card checkbox example\",\n      id: `check-${product.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }))), React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, product.name), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }, product.description))))))));\n  }\n\n}\n\nexport default club;","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/src/components/ClubPage/ClubPage.js"],"names":["React","Avatar","Brand","Button","ButtonVariant","Card","CardHead","CardActions","CardHeader","CardBody","Checkbox","Dropdown","DropdownToggle","DropdownItem","DropdownSeparator","DropdownPosition","DropdownDirection","DropdownToggleCheckbox","Gallery","GalleryItem","KebabToggle","Nav","NavItem","NavList","NavVariants","Page","PageHeader","PageSection","PageSectionVariants","PageSidebar","Pagination","Select","SelectOption","SkipToContent","TextContent","Text","Toolbar","ToolbarGroup","ToolbarItem","DataToolbar","DataToolbarContent","DataToolbarFilter","DataToolbarToggleGroup","DataToolbarGroup","DataToolbarItem","accessibleStyles","spacingStyles","css","BellIcon","CogIcon","FilterIcon","TrashIcon","activeMQIcon","avroIcon","dropBoxIcon","infinispanIcon","saxonIcon","sparkIcon","swaggerIcon","azureIcon","restIcon","CardViewBasic","Component","constructor","props","handleCheckboxClick","bind","state","filters","products","res","selectedItems","areAllSelected","itemsCheckedByDefault","isUpperToolbarDropdownOpen","isUpperToolbarKebabDropdownOpen","isLowerToolbarDropdownOpen","isLowerToolbarKebabDropdownOpen","isCardKebabDropdownOpen","activeItem","splitButtonDropdownIsOpen","page","perPage","totalItemCount","onPageDropdownToggle","setState","onPageDropdownSelect","event","onPageToolbarDropdownToggle","isPageToolbarDropdownOpen","onPageToolbarKebabDropdownToggle","onToolbarDropdownToggle","prevState","onToolbarDropdownSelect","onToolbarKebabDropdownToggle","onToolbarKebabDropdownSelect","onCardKebabDropdownToggle","key","onCardKebabDropdownSelect","onNavSelect","result","itemId","deleteItem","item","filter","getter","val","id","onSetPage","_event","pageNumber","onPerPageSelect","onSplitButtonToggle","isOpen","onSplitButtonSelect","onNameSelect","selection","checked","target","prevSelections","value","onDelete","type","toLowerCase","s","e","el","splitCheckboxSelectAll","isChecked","collection","i","updateSelected","selectPage","getAllItems","selectAll","selectNone","items","push","length","rows","map","post","selected","includes","fetch","then","resp","json","catch","err","error","componentDidMount","renderPagination","defaultPerPageOptions","title","_evt","buildSelectDropdown","numSelected","allSelected","anySelected","someChecked","splitButtonDropdownItems","left","buildFilterDropdown","filterDropdownItems","SelectVariant","checkbox","render","toolbarKebabDropdownItems","toolbarItems","modifier","PageNav","userDropdownItems","PageToolbar","screenReader","visibleOnLg","plain","hiddenOnLg","mr_0","onKebabDropdownSelect","visibleOnMd","Header","imgBrand","imgAvatar","Sidebar","pageId","PageSkipToContent","filtered","card","name","icons","pfIcon","light","product","icon","height","description","club"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Avatar,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardHead,\n  CardActions,\n  CardHeader,\n  CardBody,\n  Checkbox,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  DropdownToggleCheckbox,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  NavVariants,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  Pagination,\n  Select,\n  SelectOption,\n  SkipToContent,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport {\n  DataToolbar,\n  DataToolbarContent,\n  DataToolbarFilter,\n  DataToolbarToggleGroup,\n  DataToolbarGroup,\n  DataToolbarItem\n} from '@patternfly/react-core/dist/esm/experimental';\n// make sure you've installed @patternfly/patternfly\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport spacingStyles from '@patternfly/react-styles/css/utilities/Spacing/spacing';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon, FilterIcon, TrashIcon } from '@patternfly/react-icons';\nimport imgBrand from '@patternfly/react-core/src/demos/PageLayout/examples/imgBrand.svg';\nimport imgAvatar from '@patternfly/react-core/src/demos/PageLayout/examples/imgAvatar.svg';\nimport pfIcon from './pf-logo-small.svg';\nimport activeMQIcon from './activemq-core_200x150.png';\nimport avroIcon from './camel-avro_200x150.png';\nimport dropBoxIcon from './camel-dropbox_200x150.png';\nimport infinispanIcon from './camel-infinispan_200x150.png';\nimport saxonIcon from './camel-saxon_200x150.png';\nimport sparkIcon from './camel-spark_200x150.png';\nimport swaggerIcon from './camel-swagger-java_200x150.png';\nimport azureIcon from './FuseConnector_Icons_AzureServices.png';\nimport restIcon from './FuseConnector_Icons_REST.png';\n\nclass CardViewBasic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n\n    this.state = {\n      filters: {\n        products: []\n      },\n      res: [],\n      selectedItems: [],\n      areAllSelected: false,\n      itemsCheckedByDefault: false,\n      isUpperToolbarDropdownOpen: false,\n      isUpperToolbarKebabDropdownOpen: false,\n      isLowerToolbarDropdownOpen: false,\n      isLowerToolbarKebabDropdownOpen: false,\n      isCardKebabDropdownOpen: false,\n      activeItem: 0,\n      splitButtonDropdownIsOpen: false,\n      page: 1,\n      perPage: 10,\n      totalItemCount: 10\n    };\n\n    this.onPageDropdownToggle = isUpperToolbarDropdownOpen => {\n      this.setState({\n        isUpperToolbarDropdownOpen\n      });\n    };\n\n    this.onPageDropdownSelect = event => {\n      this.setState({\n        isUpperToolbarDropdownOpen: !this.state.isUpperToolbarDropdownOpen\n      });\n    };\n\n    this.onPageToolbarDropdownToggle = isPageToolbarDropdownOpen => {\n      this.setState({\n        isPageToolbarDropdownOpen\n      });\n    };\n\n    this.onPageToolbarKebabDropdownToggle = isUpperToolbarKebabDropdownOpen => {\n      this.setState({\n        isUpperToolbarKebabDropdownOpen\n      });\n    };\n\n    this.onToolbarDropdownToggle = isLowerToolbarDropdownOpen => {\n      this.setState(prevState => ({\n        isLowerToolbarDropdownOpen\n      }));\n    };\n\n    this.onToolbarDropdownSelect = event => {\n      this.setState({\n        isLowerToolbarDropdownOpen: !this.state.isLowerToolbarDropdownOpen\n      });\n    };\n\n    this.onToolbarKebabDropdownToggle = isLowerToolbarKebabDropdownOpen => {\n      this.setState({\n        isLowerToolbarKebabDropdownOpen\n      });\n    };\n\n    this.onToolbarKebabDropdownSelect = event => {\n      this.setState({\n        isLowerToolbarKebabDropdownOpen: !this.state.isLowerToolbarKebabDropdownOpen\n      });\n    };\n\n    this.onCardKebabDropdownToggle = (key, isCardKebabDropdownOpen) => {\n      this.setState({\n        [key]: isCardKebabDropdownOpen\n      });\n    };\n\n    this.onCardKebabDropdownSelect = (key, event) => {\n      this.setState({\n        [key]: !this.state[key]\n      });\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n\n    this.deleteItem = item => event => {\n      const filter = getter => val => getter(val) !== item.id;\n      this.setState({\n        res: this.state.res.filter(filter(({ id }) => id)),\n        selectedItems: this.state.selectedItems.filter(filter(id => id))\n      });\n    };\n\n    this.onSetPage = (_event, pageNumber) => {\n      this.setState({\n        page: pageNumber\n      });\n    };\n\n    this.onPerPageSelect = (_event, perPage) => {\n      this.setState({\n        perPage\n      });\n    };\n\n    this.onSplitButtonToggle = isOpen => {\n      this.setState({\n        splitButtonDropdownIsOpen: isOpen\n      });\n    };\n\n    this.onSplitButtonSelect = event => {\n      this.setState((prevState, props) => {\n        return { splitButtonDropdownIsOpen: !prevState.splitButtonDropdownIsOpen };\n      });\n    };\n\n    this.onNameSelect = (event, selection) => {\n      const checked = event.target.checked;\n      this.setState(prevState => {\n        const prevSelections = prevState.filters['products'];\n        return {\n          filters: {\n            ...prevState.filters,\n            ['products']: checked ? [...prevSelections, selection] : prevSelections.filter(value => value !== selection)\n          }\n        };\n      });\n    };\n\n    this.onDelete = (type = '', id = '') => {\n      if (type) {\n        this.setState(prevState => {\n          prevState.filters[type.toLowerCase()] = prevState.filters[type.toLowerCase()].filter(s => s !== id);\n          return {\n            filters: prevState.filters\n          };\n        });\n      } else {\n        this.setState({\n          filters: {\n            products: []\n          }\n        });\n      }\n    };\n  }\n\n  selectedItems(e) {\n    const { value, checked } = e.target;\n    let { selectedItems } = this.state;\n\n    if (checked) {\n      selectedItems = [...selectedItems, value];\n    } else {\n      selectedItems = selectedItems.filter(el => el !== value);\n      if (this.state.areAllSelected) {\n        this.setState({\n          areAllSelected: !this.state.areAllSelected\n        });\n      }\n    }\n    this.setState({ selectedItems });\n  }\n\n  splitCheckboxSelectAll(e) {\n    const { checked } = e.target;\n    const { isChecked, res } = this.state;\n    let collection = [];\n\n    if (checked) {\n      for (var i = 0; i <= 9; i++) collection = [...collection, i];\n    }\n\n    this.setState(\n      {\n        selectedItems: collection,\n        isChecked: isChecked,\n        areAllSelected: checked\n      },\n      this.updateSelected\n    );\n  }\n\n  selectPage(e) {\n    const { checked } = e.target;\n    const { isChecked, totalItemCount, perPage } = this.state;\n    let collection = [];\n\n    collection = this.getAllItems();\n\n    this.setState(\n      {\n        selectedItems: collection,\n        isChecked: checked,\n        areAllSelected: totalItemCount === perPage ? true : false\n      },\n      this.updateSelected\n    );\n  }\n\n  selectAll(e) {\n    const { checked } = e.target;\n    const { isChecked } = this.state;\n\n    let collection = [];\n    for (var i = 0; i <= 9; i++) collection = [...collection, i];\n\n    this.setState(\n      {\n        selectedItems: collection,\n        isChecked: true,\n        areAllSelected: true\n      },\n      this.updateSelected\n    );\n  }\n\n  selectNone(e) {\n    const { checked } = e.target;\n    const { isChecked, selectedItems } = this.state;\n    this.setState(\n      {\n        selectedItems: [],\n        isChecked: false,\n        areAllSelected: false\n      },\n      this.updateSelected\n    );\n  }\n\n  getAllItems() {\n    const { res } = this.state;\n    const collection = [];\n    for (const items of res) {\n      collection.push(items.id);\n    }\n\n    return collection;\n  }\n\n  handleCheckboxClick(checked, e) {\n    const { value } = e.target;\n    const { totalItemCount } = this.state;\n\n    if (checked) {\n      const collection = this.getAllItems();\n      this.setState(prevState => ({\n        selectedItems: [...prevState.selectedItems, value * 1],\n        areAllSelected: totalItemCount === prevState.selectedItems.length + 1\n      }));\n    } else {\n      this.setState(prevState => ({\n        selectedItems: prevState.selectedItems.filter(item => item != value),\n        areAllSelected: false\n      }));\n    }\n  }\n\n  updateSelected() {\n    const { res, selectedItems } = this.state;\n    let rows = res.map(post => {\n      post.selected = selectedItems.includes(post.id);\n      return post;\n    });\n\n    this.setState({\n      res: rows\n    });\n  }\n\n  fetch(page, perPage) {\n    fetch(`https://my-json-server.typicode.com/jenny-s51/cardviewdata/posts?_page=${page}&_limit=${perPage}`)\n      .then(resp => resp.json())\n      .then(resp => this.setState({ res: resp, perPage, page }))\n      .then(() => this.updateSelected())\n      .catch(err => this.setState({ error: err }));\n  }\n\n  componentDidMount() {\n    this.fetch(this.state.page, this.state.perPage);\n  }\n\n  renderPagination() {\n    const { page, perPage, totalItemCount } = this.state;\n\n    const defaultPerPageOptions = [\n      {\n        title: '1',\n        value: 1\n      },\n      {\n        title: '5',\n        value: 5\n      },\n      {\n        title: '10',\n        value: 10\n      }\n    ];\n\n    return (\n      <Pagination\n        itemCount={totalItemCount}\n        page={page}\n        perPage={perPage}\n        perPageOptions={defaultPerPageOptions}\n        onSetPage={(_evt, value) => {\n          this.fetch(value, perPage);\n        }}\n        onPerPageSelect={(_evt, value) => {\n          this.fetch(1, value);\n        }}\n        variant=\"top\"\n      />\n    );\n  }\n\n  buildSelectDropdown() {\n    const { splitButtonDropdownIsOpen, selectedItems, areAllSelected } = this.state;\n    const numSelected = selectedItems.length;\n    const allSelected = areAllSelected;\n    const anySelected = numSelected > 0;\n    const someChecked = anySelected ? null : false;\n    const isChecked = allSelected ? true : someChecked;\n    const splitButtonDropdownItems = [\n      <DropdownItem key=\"item-1\" onClick={this.selectNone.bind(this)}>\n        Select none (0 items)\n      </DropdownItem>,\n      <DropdownItem key=\"item-2\" onClick={this.selectPage.bind(this)}>\n        Select page ({this.state.perPage} items)\n      </DropdownItem>,\n      <DropdownItem key=\"item-3\" onClick={this.selectAll.bind(this)}>\n        Select all ({this.state.totalItemCount} items)\n      </DropdownItem>\n    ];\n\n    return (\n      <Dropdown\n        position={DropdownPosition.left}\n        onSelect={this.onSplitButtonSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id=\"example-checkbox-2\"\n                key=\"split-checkbox\"\n                aria-label={anySelected ? 'Deselect all' : 'Select all'}\n                isChecked={areAllSelected}\n                onClick={this.splitCheckboxSelectAll.bind(this)}\n              ></DropdownToggleCheckbox>\n            ]}\n            onToggle={this.onSplitButtonToggle}\n          >\n            {numSelected !== 0 && <React.Fragment>{numSelected} selected</React.Fragment>}\n          </DropdownToggle>\n        }\n        isOpen={splitButtonDropdownIsOpen}\n        dropdownItems={splitButtonDropdownItems}\n      />\n    );\n  }\n\n  buildFilterDropdown() {\n    const { isLowerToolbarDropdownOpen, filters } = this.state;\n\n    const filterDropdownItems = [\n      <SelectOption key=\"patternfly\" value=\"Patternfly\" />,\n      <SelectOption key=\"activemq\" value=\"ActiveMQ\" />,\n      <SelectOption key=\"apachespark\" value=\"Apache Spark\" />,\n      <SelectOption key=\"avro\" value=\"Avro\" />,\n      <SelectOption key=\"azureservices\" value=\"Azure Services\" />,\n      <SelectOption key=\"crypto\" value=\"Crypto\" />,\n      <SelectOption key=\"dropbox\" value=\"DropBox\" />,\n      <SelectOption key=\"jbossdatagrid\" value=\"JBoss Data Grid\" />,\n      <SelectOption key=\"rest\" value=\"REST\" />,\n      <SelectOption key=\"swagger\" value=\"SWAGGER\" />\n    ];\n\n    return (\n      <DataToolbarFilter categoryName=\"Products\" chips={filters.products} deleteChip={this.onDelete}>\n        <Select\n          variant={SelectVariant.checkbox}\n          aria-label=\"Products\"\n          onToggle={this.onToolbarDropdownToggle}\n          onSelect={this.onNameSelect}\n          selections={filters.products}\n          isExpanded={isLowerToolbarDropdownOpen}\n          placeholderText=\"Creator\"\n        >\n          {filterDropdownItems}\n        </Select>\n      </DataToolbarFilter>\n    );\n  }\n\n  render() {\n    const {\n      isUpperToolbarDropdownOpen,\n      isLowerToolbarDropdownOpen,\n      isUpperToolbarKebabDropdownOpen,\n      isLowerToolbarKebabDropdownOpen,\n      isCardKebabDropdownOpen,\n      splitButtonDropdownIsOpen,\n      activeItem,\n      filters,\n      res,\n      checked,\n      selectedItems,\n      itemsCheckedByDefault,\n      areAllSelected,\n      isChecked\n    } = this.state;\n\n    const toolbarKebabDropdownItems = [\n      <DropdownItem key=\"link\">Link</DropdownItem>,\n      <DropdownItem key=\"action\" component=\"button\">\n        Action\n      </DropdownItem>,\n      <DropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </DropdownItem>,\n      <DropdownItem key=\"disabled action\" isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <DropdownItem key=\"separated link\">Separated Link</DropdownItem>,\n      <DropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </DropdownItem>\n    ];\n\n    const toolbarItems = (\n      <React.Fragment>\n        <DataToolbarItem variant=\"bulk-select\">{this.buildSelectDropdown()}</DataToolbarItem>\n        <DataToolbarItem>{this.buildFilterDropdown()}</DataToolbarItem>\n        <DataToolbarItem>\n          <Button variant=\"primary\">Create a Project</Button>\n        </DataToolbarItem>\n        <DataToolbarItem>\n          <Dropdown\n            onSelect={this.onToolbarKebabDropdownSelect}\n            toggle={<KebabToggle onToggle={this.onToolbarKebabDropdownToggle} id=\"toggle-id-6\" />}\n            isOpen={isLowerToolbarKebabDropdownOpen}\n            isPlain\n            dropdownItems={toolbarKebabDropdownItems}\n          />\n        </DataToolbarItem>\n        <DataToolbarItem variant=\"pagination\" breakpointMods={[{ modifier: 'align-right' }]}>\n          {this.renderPagination()}\n        </DataToolbarItem>\n      </React.Fragment>\n    );\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" theme=\"dark\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    const userDropdownItems = [\n      <DropdownItem>Link</DropdownItem>,\n      <DropdownItem component=\"button\">Action</DropdownItem>,\n      <DropdownItem isDisabled>Disabled Link</DropdownItem>,\n      <DropdownItem isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator />,\n      <DropdownItem>Separated Link</DropdownItem>,\n      <DropdownItem component=\"button\">Separated Action</DropdownItem>\n    ];\n\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"default-example-uid-01\" aria-label=\"Notifications actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"default-example-uid-02\" aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onPageToolbarKebabDropdownToggle} />}\n              isOpen={isUpperToolbarKebabDropdownOpen}\n              dropdownItems={toolbarKebabDropdownItems}\n            />\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onPageDropdownSelect}\n              isOpen={isUpperToolbarDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onPageDropdownToggle}>Kyle Baker</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={imgBrand} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={imgAvatar} alt=\"Avatar image\" />}\n        showNavToggle\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} theme=\"dark\" />;\n    const pageId = 'main-content-card-view-default-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\n\n    const filtered =\n      filters.products.length > 0\n        ? res.filter(card => {\n            return filters.products.length === 0 || filters.products.includes(card.name);\n          })\n        : res;\n\n    const icons = {\n      pfIcon,\n      activeMQIcon,\n      sparkIcon,\n      avroIcon,\n      azureIcon,\n      saxonIcon,\n      dropBoxIcon,\n      infinispanIcon,\n      restIcon,\n      swaggerIcon\n    };\n\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Projects</Text>\n              <Text component=\"p\">This is a demo that showcases Patternfly Cards.</Text>\n            </TextContent>\n            <DataToolbar id=\"data-toolbar-group-types\" clearAllFilters={this.onDelete}>\n              <DataToolbarContent>{toolbarItems}</DataToolbarContent>\n            </DataToolbar>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {filtered.map((product, key) => (\n                <React.Fragment>\n                  <Card isHoverable key={key}>\n                    <CardHead>\n                      <img src={icons[product.icon]} alt={`${product.name} icon`} style={{ height: '50px' }} />\n                      <CardActions>\n                        <Dropdown\n                          isPlain\n                          position=\"right\"\n                          onSelect={e => this.onCardKebabDropdownSelect(key, e)}\n                          toggle={\n                            <KebabToggle\n                              onToggle={isCardKebabDropdownOpen =>\n                                this.onCardKebabDropdownToggle(key, isCardKebabDropdownOpen)\n                              }\n                            />\n                          }\n                          isOpen={this.state[key]}\n                          dropdownItems={[\n                            <DropdownItem onClick={this.deleteItem(product)} position=\"right\">\n                              <TrashIcon />\n                              Delete\n                            </DropdownItem>\n                          ]}\n                        />\n                        <Checkbox\n                          checked={isChecked}\n                          value={product.id}\n                          selectedItems={selectedItems}\n                          areAllSelected={areAllSelected}\n                          onChange={this.handleCheckboxClick}\n                          isChecked={selectedItems.includes(product.id)}\n                          defaultChecked={this.state.itemsCheckedByDefault}\n                          aria-label=\"card checkbox example\"\n                          id={`check-${product.id}`}\n                        />\n                      </CardActions>\n                    </CardHead>\n                    <CardHeader>{product.name}</CardHeader>\n                    <CardBody>{product.description}</CardBody>\n                  </Card>\n                </React.Fragment>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default club"]},"metadata":{},"sourceType":"module"}