{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/InputGroup/input-group';\nimport { css } from '@patternfly/react-styles';\nimport { FormSelect } from '../FormSelect';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\nexport const InputGroup = _ref => {\n  let {\n    className = '',\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  const formCtrls = [FormSelect, TextArea, TextInput].map(comp => comp.toString());\n  const idItem = React.Children.toArray(children).find(child => !formCtrls.includes(child.type.toString()) && child.props.id);\n  return React.createElement(\"div\", _extends({\n    className: css(styles.inputGroup, className)\n  }, props), idItem ? React.Children.map(children, child => formCtrls.includes(child.type.toString()) ? React.cloneElement(child, {\n    'aria-describedby': idItem.props.id\n  }) : child) : children);\n};\nInputGroup.propTypes = {\n  className: _pt.string,\n  children: _pt.node.isRequired\n};","map":{"version":3,"sources":["C:/Users/tungb/Desktop/ExperienceBU/experiencebu/node_modules/@patternfly/react-core/dist/esm/components/InputGroup/InputGroup.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","styles","css","FormSelect","TextArea","TextInput","InputGroup","_ref","className","children","props","formCtrls","map","comp","toString","idItem","Children","toArray","find","child","includes","type","id","createElement","inputGroup","cloneElement","propTypes","string","node","isRequired"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/InputGroup/input-group';\nimport { css } from '@patternfly/react-styles';\nimport { FormSelect } from '../FormSelect';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\nexport const InputGroup = (_ref) => {\n  let {\n    className = '',\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  const formCtrls = [FormSelect, TextArea, TextInput].map(comp => comp.toString());\n  const idItem = React.Children.toArray(children).find(child => !formCtrls.includes(child.type.toString()) && child.props.id);\n  return React.createElement(\"div\", _extends({\n    className: css(styles.inputGroup, className)\n  }, props), idItem ? React.Children.map(children, child => formCtrls.includes(child.type.toString()) ? React.cloneElement(child, {\n    'aria-describedby': idItem.props.id\n  }) : child) : children);\n};\nInputGroup.propTypes = {\n  className: _pt.string,\n  children: _pt.node.isRequired\n};\n//# sourceMappingURL=InputGroup.js.map"]},"metadata":{},"sourceType":"module"}