{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport class AlertGroup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      container: undefined\n    });\n  }\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target = this.getTargetElement();\n    this.setState({\n      container\n    });\n    target.appendChild(container);\n  }\n\n  componentWillUnmount() {\n    const target = this.getTargetElement();\n\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n  }\n\n  getTargetElement() {\n    const appendTo = this.props.appendTo;\n\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n\n    return appendTo || document.body;\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      isToast\n    } = this.props;\n    const alertGroup = React.createElement(AlertGroupInline, {\n      className: className,\n      isToast: isToast\n    }, children);\n\n    if (!this.props.isToast) {\n      return alertGroup;\n    }\n\n    const container = this.state.container;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(alertGroup, container);\n  }\n\n}\n\n_defineProperty(AlertGroup, \"propTypes\", {\n  className: _pt.string,\n  children: _pt.node,\n  isToast: _pt.bool,\n  appendTo: _pt.oneOfType([_pt.any, _pt.func])\n});","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/node_modules/@patternfly/react-core/dist/esm/components/AlertGroup/AlertGroup.js"],"names":["_pt","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","ReactDOM","canUseDOM","AlertGroupInline","AlertGroup","Component","constructor","args","container","undefined","componentDidMount","document","createElement","target","getTargetElement","setState","appendChild","componentWillUnmount","state","removeChild","appendTo","props","body","render","className","children","isToast","alertGroup","createPortal","string","node","bool","oneOfType","any","func"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport class AlertGroup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      container: undefined\n    });\n  }\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target = this.getTargetElement();\n    this.setState({\n      container\n    });\n    target.appendChild(container);\n  }\n\n  componentWillUnmount() {\n    const target = this.getTargetElement();\n\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n  }\n\n  getTargetElement() {\n    const appendTo = this.props.appendTo;\n\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n\n    return appendTo || document.body;\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      isToast\n    } = this.props;\n    const alertGroup = React.createElement(AlertGroupInline, {\n      className: className,\n      isToast: isToast\n    }, children);\n\n    if (!this.props.isToast) {\n      return alertGroup;\n    }\n\n    const container = this.state.container;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(alertGroup, container);\n  }\n\n}\n\n_defineProperty(AlertGroup, \"propTypes\", {\n  className: _pt.string,\n  children: _pt.node,\n  isToast: _pt.bool,\n  appendTo: _pt.oneOfType([_pt.any, _pt.func])\n});\n//# sourceMappingURL=AlertGroup.js.map"]},"metadata":{},"sourceType":"module"}