{"ast":null,"code":"import _pt from \"prop-types\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport AngleRightIcon from '@patternfly/react-icons/dist/js/icons/angle-right-icon';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\nimport { WizardBody } from './WizardBody';\nexport const WizardToggle = ({\n  isNavOpen,\n  onNavToggle,\n  nav,\n  steps,\n  activeStep,\n  children,\n  hasBodyPadding = true,\n  'aria-label': ariaLabel = 'Wizard Toggle'\n}) => {\n  let activeStepIndex;\n  let activeStepName;\n  let activeStepSubName;\n\n  for (let i = 0; i < steps.length; i++) {\n    if (activeStep.id && steps[i].id === activeStep.id || steps[i].name === activeStep.name) {\n      activeStepIndex = i + 1;\n      activeStepName = steps[i].name;\n      break;\n    } else if (steps[i].steps) {\n      for (const step of steps[i].steps) {\n        if (activeStep.id && step.id === activeStep.id || step.name === activeStep.name) {\n          activeStepIndex = i + 1;\n          activeStepName = steps[i].name;\n          activeStepSubName = step.name;\n          break;\n        }\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: () => onNavToggle(!isNavOpen),\n    className: css(styles.wizardToggle, isNavOpen && 'pf-m-expanded'),\n    \"aria-label\": ariaLabel,\n    \"aria-expanded\": isNavOpen\n  }, React.createElement(\"ol\", {\n    className: css(styles.wizardToggleList)\n  }, React.createElement(\"li\", {\n    className: css(styles.wizardToggleListItem)\n  }, React.createElement(\"span\", {\n    className: css(styles.wizardToggleNum)\n  }, activeStepIndex), \" \", activeStepName, activeStepSubName && React.createElement(AngleRightIcon, {\n    className: css(styles.wizardToggleSeparator),\n    \"aria-hidden\": \"true\"\n  })), activeStepSubName && React.createElement(\"li\", {\n    className: css(styles.wizardToggleListItem)\n  }, activeStepSubName)), React.createElement(CaretDownIcon, {\n    className: css(styles.wizardToggleIcon),\n    \"aria-hidden\": \"true\"\n  })), React.createElement(\"div\", {\n    className: css(styles.wizardOuterWrap)\n  }, React.createElement(\"div\", {\n    className: css(styles.wizardInnerWrap)\n  }, nav(isNavOpen), React.createElement(WizardBody, {\n    hasBodyPadding: hasBodyPadding\n  }, activeStep.component)), children));\n};\nWizardToggle.propTypes = {\n  nav: _pt.func.isRequired,\n  steps: _pt.arrayOf(_pt.any).isRequired,\n  activeStep: _pt.any.isRequired,\n  children: _pt.node.isRequired,\n  hasBodyPadding: _pt.bool.isRequired,\n  isNavOpen: _pt.bool.isRequired,\n  onNavToggle: _pt.func.isRequired,\n  'aria-label': _pt.string\n};","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardToggle.js"],"names":["_pt","React","css","styles","AngleRightIcon","CaretDownIcon","WizardBody","WizardToggle","isNavOpen","onNavToggle","nav","steps","activeStep","children","hasBodyPadding","ariaLabel","activeStepIndex","activeStepName","activeStepSubName","i","length","id","name","step","createElement","Fragment","onClick","className","wizardToggle","wizardToggleList","wizardToggleListItem","wizardToggleNum","wizardToggleSeparator","wizardToggleIcon","wizardOuterWrap","wizardInnerWrap","component","propTypes","func","isRequired","arrayOf","any","node","bool","string"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport AngleRightIcon from '@patternfly/react-icons/dist/js/icons/angle-right-icon';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\nimport { WizardBody } from './WizardBody';\nexport const WizardToggle = ({\n  isNavOpen,\n  onNavToggle,\n  nav,\n  steps,\n  activeStep,\n  children,\n  hasBodyPadding = true,\n  'aria-label': ariaLabel = 'Wizard Toggle'\n}) => {\n  let activeStepIndex;\n  let activeStepName;\n  let activeStepSubName;\n\n  for (let i = 0; i < steps.length; i++) {\n    if (activeStep.id && steps[i].id === activeStep.id || steps[i].name === activeStep.name) {\n      activeStepIndex = i + 1;\n      activeStepName = steps[i].name;\n      break;\n    } else if (steps[i].steps) {\n      for (const step of steps[i].steps) {\n        if (activeStep.id && step.id === activeStep.id || step.name === activeStep.name) {\n          activeStepIndex = i + 1;\n          activeStepName = steps[i].name;\n          activeStepSubName = step.name;\n          break;\n        }\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: () => onNavToggle(!isNavOpen),\n    className: css(styles.wizardToggle, isNavOpen && 'pf-m-expanded'),\n    \"aria-label\": ariaLabel,\n    \"aria-expanded\": isNavOpen\n  }, React.createElement(\"ol\", {\n    className: css(styles.wizardToggleList)\n  }, React.createElement(\"li\", {\n    className: css(styles.wizardToggleListItem)\n  }, React.createElement(\"span\", {\n    className: css(styles.wizardToggleNum)\n  }, activeStepIndex), \" \", activeStepName, activeStepSubName && React.createElement(AngleRightIcon, {\n    className: css(styles.wizardToggleSeparator),\n    \"aria-hidden\": \"true\"\n  })), activeStepSubName && React.createElement(\"li\", {\n    className: css(styles.wizardToggleListItem)\n  }, activeStepSubName)), React.createElement(CaretDownIcon, {\n    className: css(styles.wizardToggleIcon),\n    \"aria-hidden\": \"true\"\n  })), React.createElement(\"div\", {\n    className: css(styles.wizardOuterWrap)\n  }, React.createElement(\"div\", {\n    className: css(styles.wizardInnerWrap)\n  }, nav(isNavOpen), React.createElement(WizardBody, {\n    hasBodyPadding: hasBodyPadding\n  }, activeStep.component)), children));\n};\nWizardToggle.propTypes = {\n  nav: _pt.func.isRequired,\n  steps: _pt.arrayOf(_pt.any).isRequired,\n  activeStep: _pt.any.isRequired,\n  children: _pt.node.isRequired,\n  hasBodyPadding: _pt.bool.isRequired,\n  isNavOpen: _pt.bool.isRequired,\n  onNavToggle: _pt.func.isRequired,\n  'aria-label': _pt.string\n};\n//# sourceMappingURL=WizardToggle.js.map"]},"metadata":{},"sourceType":"module"}