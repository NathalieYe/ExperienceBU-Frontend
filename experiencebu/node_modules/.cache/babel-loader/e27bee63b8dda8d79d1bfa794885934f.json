{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FileUpload/file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { InputGroup } from '../InputGroup';\nimport { TextInput } from '../TextInput';\nimport { Button, ButtonVariant } from '../Button';\nimport { TextArea, TextAreResizeOrientation } from '../TextArea';\nimport { Spinner, spinnerSize } from '../Spinner';\nimport { fileReaderType } from '../../helpers/fileUtils';\nexport const FileUploadField = _ref => {\n  let {\n    id,\n    type,\n    value = '',\n    filename = '',\n    onChange = () => {},\n    onBrowseButtonClick = () => {},\n    onClearButtonClick = () => {},\n    className = '',\n    isDisabled = false,\n    isReadOnly = false,\n    isLoading = false,\n    spinnerAriaValueText,\n    isRequired = false,\n    isDragActive = false,\n    validated = 'default',\n    'aria-label': ariaLabel = 'File upload',\n    filenamePlaceholder = 'Drag a file here or browse to upload',\n    filenameAriaLabel = filename ? 'Read only' : filenamePlaceholder,\n    browseButtonText = 'Browse...',\n    clearButtonText = 'Clear',\n    isClearButtonDisabled = !filename && !value,\n    containerRef = null,\n    allowEditingUploadedText = false,\n    hideDefaultPreview = false,\n    children = null\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"id\", \"type\", \"value\", \"filename\", \"onChange\", \"onBrowseButtonClick\", \"onClearButtonClick\", \"className\", \"isDisabled\", \"isReadOnly\", \"isLoading\", \"spinnerAriaValueText\", \"isRequired\", \"isDragActive\", \"validated\", \"aria-label\", \"filenamePlaceholder\", \"filenameAriaLabel\", \"browseButtonText\", \"clearButtonText\", \"isClearButtonDisabled\", \"containerRef\", \"allowEditingUploadedText\", \"hideDefaultPreview\", \"children\"]);\n\n  const onTextAreaChange = (newValue, event) => {\n    onChange(newValue, filename, event);\n  };\n\n  return React.createElement(\"div\", _extends({\n    className: css(styles.fileUpload, isDragActive && styles.modifiers.dragHover, isLoading && styles.modifiers.loading, className),\n    ref: containerRef\n  }, props), React.createElement(\"div\", {\n    className: styles.fileUploadFileSelect\n  }, React.createElement(InputGroup, null, React.createElement(TextInput, {\n    isReadOnly: true // Always read-only regardless of isReadOnly prop (which is just for the TextArea)\n    ,\n    isDisabled: isDisabled,\n    id: `${id}-filename`,\n    name: `${id}-filename`,\n    \"aria-label\": filenameAriaLabel,\n    placeholder: filenamePlaceholder,\n    \"aria-describedby\": `${id}-browse-button`,\n    value: filename\n  }), React.createElement(Button, {\n    id: `${id}-browse-button`,\n    variant: ButtonVariant.control,\n    onClick: onBrowseButtonClick,\n    isDisabled: isDisabled\n  }, browseButtonText), React.createElement(Button, {\n    variant: ButtonVariant.control,\n    isDisabled: isDisabled || isClearButtonDisabled,\n    onClick: onClearButtonClick\n  }, clearButtonText))), React.createElement(\"div\", {\n    className: styles.fileUploadFileDetails\n  }, !hideDefaultPreview && type === fileReaderType.text && React.createElement(TextArea, {\n    readOnly: isReadOnly || !!filename && !allowEditingUploadedText,\n    disabled: isDisabled,\n    isRequired: isRequired,\n    resizeOrientation: TextAreResizeOrientation.vertical,\n    validated: validated,\n    id: id,\n    name: id,\n    \"aria-label\": ariaLabel,\n    value: value,\n    onChange: onTextAreaChange\n  }), isLoading && React.createElement(\"div\", {\n    className: styles.fileUploadFileDetailsSpinner\n  }, React.createElement(Spinner, {\n    size: spinnerSize.lg,\n    \"aria-valuetext\": spinnerAriaValueText\n  }))), children);\n};\nFileUploadField.propTypes = {\n  id: _pt.string.isRequired,\n  type: _pt.oneOf(['text', 'dataURL']),\n  value: _pt.oneOfType([_pt.string, _pt.any]),\n  filename: _pt.string,\n  onChange: _pt.func,\n  className: _pt.string,\n  isDisabled: _pt.bool,\n  isReadOnly: _pt.bool,\n  isLoading: _pt.bool,\n  spinnerAriaValueText: _pt.string,\n  isRequired: _pt.bool,\n  validated: _pt.oneOf(['success', 'error', 'default']),\n  'aria-label': _pt.string,\n  filenamePlaceholder: _pt.string,\n  filenameAriaLabel: _pt.string,\n  browseButtonText: _pt.string,\n  clearButtonText: _pt.string,\n  isClearButtonDisabled: _pt.bool,\n  hideDefaultPreview: _pt.bool,\n  allowEditingUploadedText: _pt.bool,\n  children: _pt.node,\n  onBrowseButtonClick: _pt.func,\n  onClearButtonClick: _pt.func,\n  isDragActive: _pt.bool,\n  containerRef: _pt.oneOfType([_pt.string, _pt.func, _pt.object])\n};","map":{"version":3,"sources":["/Users/BenMeow/Desktop/BU 20 Spring/Spark/ExperienceBU-Frontend/experiencebu/node_modules/@patternfly/react-core/dist/esm/components/FileUpload/FileUploadField.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","styles","css","InputGroup","TextInput","Button","ButtonVariant","TextArea","TextAreResizeOrientation","Spinner","spinnerSize","fileReaderType","FileUploadField","_ref","id","type","value","filename","onChange","onBrowseButtonClick","onClearButtonClick","className","isDisabled","isReadOnly","isLoading","spinnerAriaValueText","isRequired","isDragActive","validated","ariaLabel","filenamePlaceholder","filenameAriaLabel","browseButtonText","clearButtonText","isClearButtonDisabled","containerRef","allowEditingUploadedText","hideDefaultPreview","children","props","onTextAreaChange","newValue","event","createElement","fileUpload","modifiers","dragHover","loading","ref","fileUploadFileSelect","name","placeholder","variant","control","onClick","fileUploadFileDetails","text","readOnly","disabled","resizeOrientation","vertical","fileUploadFileDetailsSpinner","size","lg","propTypes","string","oneOf","oneOfType","any","func","bool","node","object"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FileUpload/file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { InputGroup } from '../InputGroup';\nimport { TextInput } from '../TextInput';\nimport { Button, ButtonVariant } from '../Button';\nimport { TextArea, TextAreResizeOrientation } from '../TextArea';\nimport { Spinner, spinnerSize } from '../Spinner';\nimport { fileReaderType } from '../../helpers/fileUtils';\nexport const FileUploadField = (_ref) => {\n  let {\n    id,\n    type,\n    value = '',\n    filename = '',\n    onChange = () => {},\n    onBrowseButtonClick = () => {},\n    onClearButtonClick = () => {},\n    className = '',\n    isDisabled = false,\n    isReadOnly = false,\n    isLoading = false,\n    spinnerAriaValueText,\n    isRequired = false,\n    isDragActive = false,\n    validated = 'default',\n    'aria-label': ariaLabel = 'File upload',\n    filenamePlaceholder = 'Drag a file here or browse to upload',\n    filenameAriaLabel = filename ? 'Read only' : filenamePlaceholder,\n    browseButtonText = 'Browse...',\n    clearButtonText = 'Clear',\n    isClearButtonDisabled = !filename && !value,\n    containerRef = null,\n    allowEditingUploadedText = false,\n    hideDefaultPreview = false,\n    children = null\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"id\", \"type\", \"value\", \"filename\", \"onChange\", \"onBrowseButtonClick\", \"onClearButtonClick\", \"className\", \"isDisabled\", \"isReadOnly\", \"isLoading\", \"spinnerAriaValueText\", \"isRequired\", \"isDragActive\", \"validated\", \"aria-label\", \"filenamePlaceholder\", \"filenameAriaLabel\", \"browseButtonText\", \"clearButtonText\", \"isClearButtonDisabled\", \"containerRef\", \"allowEditingUploadedText\", \"hideDefaultPreview\", \"children\"]);\n\n  const onTextAreaChange = (newValue, event) => {\n    onChange(newValue, filename, event);\n  };\n\n  return React.createElement(\"div\", _extends({\n    className: css(styles.fileUpload, isDragActive && styles.modifiers.dragHover, isLoading && styles.modifiers.loading, className),\n    ref: containerRef\n  }, props), React.createElement(\"div\", {\n    className: styles.fileUploadFileSelect\n  }, React.createElement(InputGroup, null, React.createElement(TextInput, {\n    isReadOnly: true // Always read-only regardless of isReadOnly prop (which is just for the TextArea)\n    ,\n    isDisabled: isDisabled,\n    id: `${id}-filename`,\n    name: `${id}-filename`,\n    \"aria-label\": filenameAriaLabel,\n    placeholder: filenamePlaceholder,\n    \"aria-describedby\": `${id}-browse-button`,\n    value: filename\n  }), React.createElement(Button, {\n    id: `${id}-browse-button`,\n    variant: ButtonVariant.control,\n    onClick: onBrowseButtonClick,\n    isDisabled: isDisabled\n  }, browseButtonText), React.createElement(Button, {\n    variant: ButtonVariant.control,\n    isDisabled: isDisabled || isClearButtonDisabled,\n    onClick: onClearButtonClick\n  }, clearButtonText))), React.createElement(\"div\", {\n    className: styles.fileUploadFileDetails\n  }, !hideDefaultPreview && type === fileReaderType.text && React.createElement(TextArea, {\n    readOnly: isReadOnly || !!filename && !allowEditingUploadedText,\n    disabled: isDisabled,\n    isRequired: isRequired,\n    resizeOrientation: TextAreResizeOrientation.vertical,\n    validated: validated,\n    id: id,\n    name: id,\n    \"aria-label\": ariaLabel,\n    value: value,\n    onChange: onTextAreaChange\n  }), isLoading && React.createElement(\"div\", {\n    className: styles.fileUploadFileDetailsSpinner\n  }, React.createElement(Spinner, {\n    size: spinnerSize.lg,\n    \"aria-valuetext\": spinnerAriaValueText\n  }))), children);\n};\nFileUploadField.propTypes = {\n  id: _pt.string.isRequired,\n  type: _pt.oneOf(['text', 'dataURL']),\n  value: _pt.oneOfType([_pt.string, _pt.any]),\n  filename: _pt.string,\n  onChange: _pt.func,\n  className: _pt.string,\n  isDisabled: _pt.bool,\n  isReadOnly: _pt.bool,\n  isLoading: _pt.bool,\n  spinnerAriaValueText: _pt.string,\n  isRequired: _pt.bool,\n  validated: _pt.oneOf(['success', 'error', 'default']),\n  'aria-label': _pt.string,\n  filenamePlaceholder: _pt.string,\n  filenameAriaLabel: _pt.string,\n  browseButtonText: _pt.string,\n  clearButtonText: _pt.string,\n  isClearButtonDisabled: _pt.bool,\n  hideDefaultPreview: _pt.bool,\n  allowEditingUploadedText: _pt.bool,\n  children: _pt.node,\n  onBrowseButtonClick: _pt.func,\n  onClearButtonClick: _pt.func,\n  isDragActive: _pt.bool,\n  containerRef: _pt.oneOfType([_pt.string, _pt.func, _pt.object])\n};\n//# sourceMappingURL=FileUploadField.js.map"]},"metadata":{},"sourceType":"module"}