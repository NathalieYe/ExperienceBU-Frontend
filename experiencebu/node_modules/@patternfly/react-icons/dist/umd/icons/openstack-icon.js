(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "../SVGIcon"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("../SVGIcon"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.SVGIcon);
    global.undefined = mod.exports;
  }
})(this, function (exports, _react, _SVGIcon) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OpenstackIcon = exports.OpenstackIconConfig = undefined;

  var React = _interopRequireWildcard(_react);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function () {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};

    if (obj != null) {
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  const OpenstackIconConfig = exports.OpenstackIconConfig = {
    name: 'OpenstackIcon',
    height: 180,
    width: 180,
    svgPath: 'M 17.150391 0 A 17.17 17.17 0 0 0 0.029296875 17.119141 L 0.029296875 57.470703 L 41.640625 57.470703 L 41.640625 50.880859 A 9.26 9.26 0 0 1 50.900391 41.619141 L 133.42969 41.619141 A 9.26 9.26 0 0 1 142.68945 50.880859 L 142.68945 57.470703 L 184.33008 57.470703 L 184.33008 17.119141 A 17.18 17.18 0 0 0 167.15039 0 L 17.150391 0 z M 0 69.369141 L 0 110.99023 L 41.619141 110.99023 L 41.619141 69.369141 L 0 69.369141 z M 142.66016 69.369141 L 142.66016 110.99023 L 184.2793 110.99023 L 184.2793 69.369141 L 142.66016 69.369141 z M 0 122.89062 L 0 163.23047 A 17.17 17.17 0 0 0 17.119141 180.35938 L 167.11914 180.35938 A 17.18 17.18 0 0 0 184.33008 163.23047 L 184.33008 122.89062 L 142.66016 122.89062 L 142.66016 129.48047 A 9.27 9.27 0 0 1 133.40039 138.74023 L 50.869141 138.74023 A 9.27 9.27 0 0 1 41.609375 129.48047 L 41.609375 122.89062 L 0 122.89062 z',
    yOffset: 0,
    xOffset: 0,
    transform: ''
  };

  const OpenstackIcon = exports.OpenstackIcon = props => {
    const newProps = Object.assign({
      config: OpenstackIconConfig
    }, props);
    return React.createElement(_SVGIcon.SVGIcon, newProps);
  };

  exports.default = OpenstackIcon;
});
//# sourceMappingURL=openstack-icon.js.map